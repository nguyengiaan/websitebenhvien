@model websitebenhvien.Models.EnitityVM.ActivityIndexPageVM
@{
    ViewData["Title"] = "Hoạt động bệnh viện";
    ViewData["Description"] = "Các hoạt động, sự kiện của bệnh viện";
    ViewData["Keywords"] = "hoạt động bệnh viện, sự kiện y tế, tin tức sức khỏe";
}

<!-- Hero Section -->
<section class="hero-section bg-gradient-primary text-white py-5">
    <div class="container">
        <div class="row align-items-center">
            <div class="col-lg-8">
                <h1 class="display-4 fw-bold mb-3">Hoạt động bệnh viện</h1>
                <p class="lead mb-4">
                    Cập nhật các hoạt động, sự kiện mới nhất của bệnh viện
                    @if (!string.IsNullOrEmpty(Model.SearchTerm))
                    {
                        <br><span class="badge bg-light text-dark"> Kết quả tìm kiếm cho: "<strong>@Model.SearchTerm</strong>"</span>
                    }
                </p>
                
                <!-- Search Bar -->
                <div class="row">
                    <div class="col-md-8">
                        <form method="get" action="@Url.Action("Index")" class="d-flex">
                            <div class="input-group input-group-lg">
                                <input type="text" name="search" value="@Model.SearchTerm" 
                                       class="form-control border-0 shadow-none" 
                                       placeholder="Tìm kiếm hoạt động...">
                                <button class="btn btn-warning" type="submit">
                                    <i class="fas fa-search"></i> Tìm kiếm
                                </button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
            <div class="col-lg-4 text-center d-none d-lg-block">
                <i class="fas fa-hospital-user fa-8x opacity-25"></i>
            </div>
        </div>
    </div>
</section>

<div class="container-fluid py-5">
    <div class="row">
        <!-- Sidebar -->
        <div class="col-xl-2 col-lg-3 col-md-4 mb-4">
            <div class="sticky-sidebar">
                <!-- Categories Card -->
                <div class="card border-0 shadow-sm mb-4">
                    <div class="card-header bg-white border-bottom-0 py-3">
                        <h6 class="mb-0 fw-bold text-primary">
                            <i class="fas fa-th-large me-2"></i>Danh mục hoạt động
                        </h6>
                    </div>
                    <div class="card-body p-0">
                        <div class="list-group list-group-flush">
                            <a href="@Url.Action("Index")" 
                               class="list-group-item list-group-item-action border-0 py-3 @(string.IsNullOrEmpty(Context.Request.Query["category"]) ? "active bg-primary text-white" : "")">
                                <i class="fas fa-home me-2"></i>Hoạt động
                                <span class="badge bg-light text-dark ms-auto">@Model.TotalItems</span>
                            </a>
                            @foreach (var category in Model.Categories)
                            {
                                <a href="@Url.Action("Category", new { categoryAlias = category.link_alias })" 
                                   class="list-group-item list-group-item-action border-0 py-3 category-item">
                                    <i class="fas fa-folder-open me-2 text-primary"></i> @category.Title
                                </a>
                            }
                        </div>
                    </div>
                </div>

            
               
            </div>
        </div>

        <!-- Main Content -->
        <div class="col-xl-10 col-lg-9 col-md-8">
            <!-- Filter and Sort Bar -->
            <div class="row mb-4">
                <div class="col-12">
                    <div class="card border-0 shadow-sm">
                        <div class="card-body py-3">
                            <div class="d-flex flex-wrap justify-content-between align-items-center">
                                <div class="d-flex align-items-center mb-2 mb-md-0">
                                    <span class="text-muted me-3">
                                        <i class="fas fa-filter"></i> Hiển thị @Model.Posts.Count() / @Model.TotalItems hoạt động
                                    </span>
                                    @if (Model.TotalPages > 1)
                                    {
                                        <span class="text-muted">
                                            <i class="fas fa-file-alt"></i> Trang @Model.CurrentPage / @Model.TotalPages
                                        </span>
                                    }
                                </div>
                                <div class="d-flex align-items-center">
                                    <span class="text-muted small me-2">Sắp xếp:</span>
                                    <select class="form-select form-select-sm border-0 bg-light" style="width: auto;">
                                        <option>Mới nhất</option>
                                        <option>Cũ nhất</option>
                                        <option>A-Z</option>
                                        <option>Z-A</option>
                                    </select>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Posts Grid -->
            @if (Model.Posts.Any())
            {
                <div class="row g-4">
                    @foreach (var post in Model.Posts)
                    {
                        <div class="col-lg-6 col-xl-4">
                            <article class="card border-0 shadow-sm h-100 post-card">
                                @if (!string.IsNullOrEmpty(post.Thumbnail))
                                {
                                    <div class="card-img-wrapper position-relative overflow-hidden">
                                        <img src="/Resources/@post.Thumbnail" class="card-img-top" alt="@post.Title" 
                                             style="height: 220px; object-fit: cover; transition: transform 0.3s ease;">
                                        <div class="card-img-overlay d-flex align-items-end p-0">
                                            <div class="bg-gradient-dark text-white p-3 w-100">
                                                <small class="opacity-75">
                                                    <i class="fas fa-calendar me-1"></i>@post.Createat.ToString("dd/MM/yyyy")
                                                    @if (!string.IsNullOrEmpty(post.CategoryName))
                                                    {
                                                        <span class="mx-2">•</span>
                                                        <i class="fas fa-tag me-1"></i>@post.CategoryName
                                                    }
                                                </small>
                                            </div>
                                        </div>
                                    </div>
                                }
                                else
                                {
                                    <div class="card-img-top bg-light d-flex align-items-center justify-content-center" style="height: 220px;">
                                        <i class="fas fa-image fa-3x text-muted"></i>
                                    </div>
                                }
                                
                                <div class="card-body d-flex flex-column p-4">
                                    <h5 class="card-title fw-bold mb-3 line-clamp-2">
                                        <a href="@Url.Action("Detail", new { alias = post.Alias_url?.Split('/').LastOrDefault() })" 
                                           class="text-decoration-none text-dark stretched-link">
                                            @post.Title
                                        </a>
                                    </h5>
                                    
                                    @if (!string.IsNullOrEmpty(post.Descriptionshort))
                                    {
                                        <p class="card-text text-muted mb-3 flex-grow-1 line-clamp-3">
                                            @(post.Descriptionshort.Length > 120 ? post.Descriptionshort.Substring(0, 120) + "..." : post.Descriptionshort)
                                        </p>
                                    }
                                    
                                    <div class="d-flex justify-content-between align-items-center mt-auto">
                                        <small class="text-muted">
                                            <i class="fas fa-clock me-1"></i>
                                            @{
                                                var timeAgo = DateTime.Now - post.Createat;
                                                string timeDisplay = timeAgo.Days > 0 ? $"{timeAgo.Days} ngày trước" : 
                                                                    timeAgo.Hours > 0 ? $"{timeAgo.Hours} giờ trước" : 
                                                                    "Vừa mới";
                                            }
                                            @timeDisplay
                                        </small>
                                        <span class="text-primary">
                                            <i class="fas fa-arrow-right"></i>
                                        </span>
                                    </div>
                                </div>
                            </article>
                        </div>
                    }
                </div>

                <!-- Enhanced Pagination -->
                @if (Model.TotalPages > 1)
                {
                    <nav aria-label="Phân trang" class="mt-5">
                        <div class="d-flex justify-content-between align-items-center mb-3">
                            <span class="text-muted">
                                Hiển thị trang @Model.CurrentPage / @Model.TotalPages (@Model.TotalItems hoạt động)
                            </span>
                        </div>
                        <ul class="pagination pagination-lg justify-content-center">
                            @if (Model.HasPreviousPage)
                            {
                                <li class="page-item">
                                    <a class="page-link border-0 shadow-sm me-2" href="@Url.Action("Index", new { page = 1, search = Model.SearchTerm })">
                                        <i class="fas fa-angle-double-left"></i>
                                    </a>
                                </li>
                                <li class="page-item">
                                    <a class="page-link border-0 shadow-sm me-2" href="@Url.Action("Index", new { page = Model.CurrentPage - 1, search = Model.SearchTerm })">
                                        <i class="fas fa-angle-left"></i> Trước
                                    </a>
                                </li>
                            }

                            @for (int i = Math.Max(1, Model.CurrentPage - 2); i <= Math.Min(Model.TotalPages, Model.CurrentPage + 2); i++)
                            {
                                <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                                    <a class="page-link border-0 shadow-sm mx-1 @(i == Model.CurrentPage ? "bg-primary" : "")" 
                                       href="@Url.Action("Index", new { page = i, search = Model.SearchTerm })">@i</a>
                                </li>
                            }

                            @if (Model.HasNextPage)
                            {
                                <li class="page-item">
                                    <a class="page-link border-0 shadow-sm ms-2" href="@Url.Action("Index", new { page = Model.CurrentPage + 1, search = Model.SearchTerm })">
                                        Sau <i class="fas fa-angle-right"></i>
                                    </a>
                                </li>
                                <li class="page-item">
                                    <a class="page-link border-0 shadow-sm ms-2" href="@Url.Action("Index", new { page = Model.TotalPages, search = Model.SearchTerm })">
                                        <i class="fas fa-angle-double-right"></i>
                                    </a>
                                </li>
                            }
                        </ul>
                    </nav>
                }
            }
            else
            {
                <!-- Enhanced Empty State -->
                <div class="text-center py-5">
                    <div class="empty-state">
                        <div class="mb-4">
                            <i class="fas fa-search fa-4x text-muted opacity-50"></i>
                        </div>
                        <h3 class="fw-bold mb-3">
                            @if (!string.IsNullOrEmpty(Model.SearchTerm))
                            {
                                <span>Không tìm thấy kết quả</span>
                            }
                            else
                            {
                                <span>Chưa có hoạt động nào</span>
                            }
                        </h3>
                        <p class="text-muted mb-4">
                            @if (!string.IsNullOrEmpty(Model.SearchTerm))
                            {
                                <span>Không tìm thấy hoạt động nào phù hợp với từ khóa "<strong>@Model.SearchTerm</strong>".<br>
                                Hãy thử tìm kiếm với từ khóa khác hoặc xem tất cả hoạt động.</span>
                            }
                            else
                            {
                                <span>Hiện tại chưa có hoạt động nào được đăng tải.<br>
                                Vui lòng quay lại sau để xem các hoạt động mới nhất.</span>
                            }
                        </p>
                        @if (!string.IsNullOrEmpty(Model.SearchTerm))
                        {
                            <a href="@Url.Action("Index")" class="btn btn-primary btn-lg">
                                <i class="fas fa-list me-2"></i>Xem tất cả hoạt động
                            </a>
                        }
                    </div>
                </div>
            }
        </div>
    </div>
</div>

<style>
    .hero-section {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        position: relative;
        overflow: hidden;
    }
    
    .hero-section::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: rgba(0,0,0,0.1);
        z-index: 1;
    }
    
    .hero-section .container {
        position: relative;
        z-index: 2;
    }
    
    .sticky-sidebar {
        position: sticky;
        top: 20px;
        z-index: 100;
    }
    
    .post-card {
        transition: all 0.3s ease;
        border-radius: 15px;
        overflow: hidden;
    }
    
    .post-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 15px 35px rgba(0,0,0,0.1) !important;
    }
    
    .post-card:hover .card-img-top {
        transform: scale(1.05);
    }
    
    .card-img-wrapper {
        border-radius: 15px 15px 0 0;
    }
    
    .bg-gradient-dark {
        background: linear-gradient(to top, rgba(0,0,0,0.8), transparent);
    }
    
    .bg-gradient-primary {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    }
    
    .line-clamp-2 {
        display: -webkit-box;
        -webkit-line-clamp: 2;
        -webkit-box-orient: vertical;
        overflow: hidden;
    }
    
    .line-clamp-3 {
        display: -webkit-box;
        -webkit-line-clamp: 3;
        -webkit-box-orient: vertical;
        overflow: hidden;
    }
    
    .category-item:hover {
        background-color: #f8f9fa;
        border-left: 4px solid #007bff;
        padding-left: calc(1rem - 4px);
    }
    
    .page-link {
        color: #007bff;
        border-radius: 10px;
    }
    
    .page-link:hover {
        background-color: #007bff;
        color: white;
        transform: translateY(-2px);
    }
    
    .empty-state {
        padding: 3rem;
        max-width: 500px;
        margin: 0 auto;
    }
    
    @@media (max-width: 768px) {
        .hero-section {
            padding: 2rem 0;
        }
        
        .hero-section .display-4 {
            font-size: 2rem;
        }
        
        .sticky-sidebar {
            position: relative;
            top: auto;
        }
        
        .pagination-lg .page-link {
            padding: 0.5rem 0.75rem;
            font-size: 0.9rem;
        }
    }
</style>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Smooth scroll
            $('a[href^="#"]').on('click', function(event) {
                var target = $($(this).attr('href'));
                if(target.length) {
                    event.preventDefault();
                    $('html, body').animate({
                        scrollTop: target.offset().top - 80
                    }, 1000);
                }
            });
            
            // Animate cards on scroll
            const observerOptions = {
                threshold: 0.1,
                rootMargin: '0px 0px -50px 0px'
            };
            
            const observer = new IntersectionObserver(function(entries) {
                entries.forEach(entry => {
                    if (entry.isIntersecting) {
                        entry.target.style.opacity = '1';
                        entry.target.style.transform = 'translateY(0)';
                    }
                });
            }, observerOptions);
            
            // Observe all post cards
            document.querySelectorAll('.post-card').forEach(card => {
                card.style.opacity = '0';
                card.style.transform = 'translateY(20px)';
                card.style.transition = 'opacity 0.6s ease, transform 0.6s ease';
                observer.observe(card);
            });
            
            // Enhanced search
            const searchInput = $('input[name="search"]');
            let searchTimeout;
            
            searchInput.on('input', function() {
                clearTimeout(searchTimeout);
                const query = $(this).val();
                
                if (query.length > 2) {
                    searchTimeout = setTimeout(() => {
                        // Auto-search suggestion (có thể implement AJAX)
                        console.log('Searching for:', query);
                    }, 500);
                }
            });
        });
    </script>
}
