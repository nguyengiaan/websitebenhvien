@model websitebenhvien.Models.EnitityVM.PostactivityVM
@{
    ViewData["Title"] = "Chỉnh sửa hoạt động";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<div class="content-wrapper">
    <div class="content-header">
        <div class="container-fluid">
            <div class="row mb-2">
                <div class="col-sm-6">
                    <h1 class="m-0">Chỉnh sửa hoạt động</h1>
                </div>
                <div class="col-sm-6">
                    <ol class="breadcrumb float-sm-right">
                        <li class="breadcrumb-item"><a href="@Url.Action("Index", "Home", new { Area = "Admin" })">Trang chủ</a></li>
                        <li class="breadcrumb-item"><a href="@Url.Action("Index")">Hoạt động</a></li>
                        <li class="breadcrumb-item active">Chỉnh sửa</li>
                    </ol>
                </div>
            </div>
        </div>
    </div>

    <section class="content">
        <div class="container-fluid">
            <div class="card">
                <div class="card-header">
                    <h3 class="card-title">Thông tin hoạt động</h3>
                </div>

                <form asp-action="Edit" method="post" enctype="multipart/form-data" class="form-horizontal">
                    <div class="card-body">
                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                        
                        <input asp-for="Id_Postactivity" type="hidden" />

                        <div class="row">
                            <div class="col-md-8">
                                <!-- Tiêu đề -->
                                <div class="form-group">
                                    <label asp-for="Title" class="control-label">Tiêu đề <span class="text-danger">*</span></label>
                                    <input asp-for="Title" class="form-control" placeholder="Nhập tiêu đề hoạt động..." />
                                    <span asp-validation-for="Title" class="text-danger"></span>
                                </div>

                                <!-- Mô tả ngắn -->
                                <div class="form-group">
                                    <label asp-for="Descriptionshort" class="control-label">Mô tả ngắn</label>
                                    <textarea asp-for="Descriptionshort" class="form-control" rows="3" 
                                              placeholder="Nhập mô tả ngắn..."></textarea>
                                    <span asp-validation-for="Descriptionshort" class="text-danger"></span>
                                </div>           
                                <div class="form-group">
                                    <label asp-for="Createat" class="control-label">Ngày đăng</label>
                                    <input asp-for="Createat" class="form-control" type="date"  />
                                    <span asp-validation-for="Createat" class="text-danger"></span>
                                </div>


                                <!-- Nội dung chính với Summernote -->
                                <div class="form-group">
                                    <label asp-for="Description" class="control-label">Nội dung chính <span class="text-danger">*</span></label>
                                    <textarea asp-for="Description" class="form-control summernote" rows="10"></textarea>
                                    <span asp-validation-for="Description" class="text-danger"></span>
                                    <div class="mt-2">
                                        <button type="button" class="btn btn-info btn-sm" id="btnGenerateKeywords">
                                            <i class="fa fa-magic"></i> Tạo từ khóa tự động
                                        </button>
                                        <button type="button" class="btn btn-success btn-sm" id="btnGenerateSchema">
                                            <i class="fa fa-code"></i> Tạo Schema tự động
                                        </button>
                                    </div>
                                </div>

                                <!-- URL -->
                 
                                <!-- Alias URL -->
                                <div class="form-group">
                                    <label asp-for="Alias_url" class="control-label">Alias URL</label>
                                    <input asp-for="Alias_url" class="form-control" placeholder="Nhập alias URL..." />
                                    <span asp-validation-for="Alias_url" class="text-danger"></span>
                                </div>

                                <!-- Từ khóa -->
                                <div class="form-group">
                                    <label asp-for="Keyword" class="control-label">Từ khóa SEO</label>
                                    <input asp-for="Keyword" class="form-control" placeholder="Nhập từ khóa SEO..." />
                                    <span asp-validation-for="Keyword" class="text-danger"></span>
                                </div>

                                <!-- Schema Markup -->
                                <div class="form-group">
                                    <label asp-for="SchemaMakup" class="control-label">Schema Markup</label>
                                    <textarea asp-for="SchemaMakup" class="form-control" rows="4" 
                                              placeholder="Nhập schema markup..."></textarea>
                                    <span asp-validation-for="SchemaMakup" class="text-danger"></span>
                                </div>
                            </div>

                            <div class="col-md-4">
                                <!-- Hình ảnh thumbnail -->
                                <div class="form-group">
                                    <label asp-for="ThumbnailFile" class="control-label">Hình ảnh đại diện</label>
                                    <div class="custom-file">
                                        <input asp-for="ThumbnailFile" class="custom-file-input" id="thumbnailFile" accept="image/*" />
                                        <label class="custom-file-label" for="thumbnailFile">Chọn hình ảnh mới...</label>
                                    </div>
                                    <span asp-validation-for="ThumbnailFile" class="text-danger"></span>
                                    
                                    <!-- Hidden field để lưu thumbnail hiện tại -->
                                    <input asp-for="Thumbnail" type="hidden" id="currentThumbnailPath" />
                                    
                                    <div class="mt-3">
                                        <div id="thumbnailContainer" class="position-relative d-inline-block">
                                            <!-- Current or new thumbnail will be displayed here -->
                                            <img id="thumbnailDisplay" 
                                                 src="@(!string.IsNullOrEmpty(Model.Thumbnail) ? "/Uploads/" + Model.Thumbnail : "#")" 
                                                 alt="Thumbnail" 
                                                 style="max-width: 200px; max-height: 200px; border-radius: 8px; @(!string.IsNullOrEmpty(Model.Thumbnail) ? "" : "display: none;")" 
                                                 class="img-thumbnail" />
                                            <!-- No thumbnail placeholder -->
                                            <div id="noThumbnail" 
                                                 class="text-muted text-center p-3 border rounded" 
                                                 style="width: 200px; @(!string.IsNullOrEmpty(Model.Thumbnail) ? "display: none;" : "")">
                                                <i class="fa fa-image fa-3x mb-2"></i>
                                                <p class="mb-0">Chưa có hình ảnh</p>
                                            </div>
                                            <!-- Remove button -->
                                            <button type="button" 
                                                    id="btnRemoveThumbnail" 
                                                    class="btn btn-sm btn-danger position-absolute" 
                                                    style="top: 5px; right: 5px; padding: 2px 6px; z-index: 10; @(!string.IsNullOrEmpty(Model.Thumbnail) ? "" : "display: none;")" 
                                                    title="Xóa hình ảnh">
                                                <i class="fa fa-times"></i>
                                            </button>
                                        </div>

                                        <div class="mt-2">
                                            <small class="text-muted">
                                                <i class="fa fa-info-circle"></i> 
                                                Chọn file mới để thay đổi hình ảnh. Để trống nếu muốn giữ hình ảnh hiện tại.
                                            </small>
                                        </div>
                                    </div>
                                </div>

                                <!-- Danh mục -->
                                <div class="form-group">
                                    <label asp-for="Id_Categoryactivity" class="control-label">Danh mục <span class="text-danger">*</span></label>
                                    <select asp-for="Id_Categoryactivity" class="form-control">
                                        <option value="">-- Chọn danh mục --</option>
                                        @foreach (var item in ViewBag.Categories as SelectList)
                                        {
                                            <option value="@item.Value" selected="@item.Selected">@item.Text</option>
                                        }
                                    </select>
                                    <span asp-validation-for="Id_Categoryactivity" class="text-danger"></span>
                                </div>

                                <!-- Trạng thái -->
                                <div class="form-group">
                                    <label asp-for="Status" class="control-label">Trạng thái</label>
                                    <div class="form-check">
                                        <input asp-for="Status" class="form-check-input" type="checkbox" />
                                        <label class="form-check-label" asp-for="Status">
                                            Kích hoạt
                                        </label>
                                    </div>
                                    <span asp-validation-for="Status" class="text-danger"></span>
                                </div>

                                <!-- Thông tin bổ sung -->
                                <div class="card card-info">
                                    <div class="card-header">
                                        <h3 class="card-title">Thông tin</h3>
                                    </div>
                                    <div class="card-body">
                                        <p><strong>ID:</strong> @Model.Id_Postactivity</p>
                                        @if (Model.Createat != DateTime.MinValue)
                                        {
                                            <p><strong>Ngày tạo:</strong> @Model.Createat.ToString("dd/MM/yyyy HH:mm")</p>
                                        }
                                        <hr>
                                        <ul class="list-unstyled">
                                            <li><i class="fa fa-check text-success"></i> Tiêu đề và nội dung là bắt buộc</li>
                                            <li><i class="fa fa-check text-success"></i> URL phải là duy nhất</li>
                                            <li><i class="fa fa-check text-success"></i> Sử dụng Summernote để định dạng</li>
                                        </ul>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="card-footer">
                        <div class="row">
                            <div class="col-md-12">
                                <button type="submit" class="btn btn-primary">
                                    <i class="fa fa-save"></i> Cập nhật
                                </button>
                                <a href="@Url.Action("Index")" class="btn btn-secondary">
                                    <i class="fa fa-times"></i> Hủy bỏ
                                </a>
                                <a href="@Url.Action("Details", new { id = Model.Id_Postactivity })" class="btn btn-info">
                                    <i class="fa fa-eye"></i> Xem chi tiết
                                </a>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </section>
</div>
@{
    var summenote = new websitebenhvien.Models.EnitityVM.Summenote(".summernote");
}
<partial name="_Summernote" model="summenote" />
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    
    <!-- Summernote CSS and JS -->
    
    <style>
        #thumbnailContainer {
            display: inline-block;
            position: relative;
        }
        
        #thumbnailContainer img {
            transition: all 0.3s ease;
        }
        
        #thumbnailContainer:hover img {
            filter: brightness(0.9);
        }
        
        #btnRemoveThumbnail {
            border-radius: 50%;
            box-shadow: 0 2px 4px rgba(0,0,0,0.2);
            transition: all 0.2s ease;
        }
        
        #btnRemoveThumbnail:hover {
            transform: scale(1.1);
            box-shadow: 0 4px 8px rgba(0,0,0,0.3);
        }
        
        #noThumbnail {
            border: 2px dashed #dee2e6;
            color: #6c757d;
        }
        
        .custom-file-label {
            overflow: hidden;
            text-overflow: ellipsis;
            white-space: nowrap;
        }
    </style>
   
    <script>
        $(document).ready(function() {
            // Debug initial state
         
            // Auto-generate alias URL from title (chỉ khi alias trống)
            $('#Title').on('input', function() {
                var aliasField = $('#Alias_url');
                if (aliasField.val() === '') {
                    var title = $(this).val();
                    var alias = convertToSlug(title);
                    aliasField.val(alias);
                }
            });

            // Thumbnail file preview and management
            $('#thumbnailFile').on('change', function() {
                var file = this.files[0];
                
                if (file) {
          
                    
                    // Validate file type
                    var allowedTypes = ['image/jpeg', 'image/jpg', 'image/png', 'image/gif', 'image/webp'];
                    if (!allowedTypes.includes(file.type)) {
                        Swal.fire('Lỗi', 'Vui lòng chọn file hình ảnh hợp lệ (JPG, PNG, GIF, WebP)', 'error');
                        $(this).val('');
                        $('.custom-file-label').text('Chọn hình ảnh mới...');
                        return;
                    }
                    
                    // Validate file size (max 5MB)
                    var maxSize = 5 * 1024 * 1024; // 5MB
                    if (file.size > maxSize) {
                        Swal.fire('Lỗi', 'Kích thước file không được vượt quá 5MB', 'error');
                        $(this).val('');
                        $('.custom-file-label').text('Chọn hình ảnh mới...');
                        return;
                    }
                    
                    console.log('File validation passed, reading file...');
                    var reader = new FileReader();
                    reader.onload = function(e) {
                        console.log('File loaded successfully');
                        
                        // Update image source and show it
                        $('#thumbnailDisplay').attr('src', e.target.result).show();
                        $('#noThumbnail').hide();
                        $('#btnRemoveThumbnail').show();
                        
             
                    };
                    
                    reader.onerror = function(e) {
                    
                        Swal.fire('Lỗi', 'Không thể đọc file hình ảnh', 'error');
                    };
                    
                    reader.readAsDataURL(file);
                    
                    // Update file label
                    $('.custom-file-label').text(file.name);
                    console.log('File label updated to:', file.name);
                } else {
     
                    resetThumbnailDisplay();
                }
            });
            
            // Remove thumbnail functionality
            $(document).on('click', '#btnRemoveThumbnail', function(e) {
                e.preventDefault();
                console.log('Remove button clicked');
                
                Swal.fire({
                    title: 'Xác nhận xóa',
                    text: 'Bạn có chắc muốn xóa hình ảnh này?',
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#d33',
                    cancelButtonColor: '#3085d6',
                    confirmButtonText: 'Xóa',
                    cancelButtonText: 'Hủy'
                }).then((result) => {
                    if (result.isConfirmed) {
                    
                        
                        // Clear file input
                        $('#thumbnailFile').val('');
                        $('.custom-file-label').text('Chọn hình ảnh mới...');
                        
                        // Clear hidden field to mark for deletion
                        $('#currentThumbnailPath').val('');
                        
                        // Show no thumbnail state
                        $('#thumbnailDisplay').hide();
                        $('#noThumbnail').show();
                        $('#btnRemoveThumbnail').hide();
                        
                 
                        Swal.fire('Đã xóa!', 'Hình ảnh sẽ được xóa khi lưu.', 'success');
                    }
                });
            });
            
            function resetThumbnailDisplay() {
 
                var currentThumbnail = $('#currentThumbnailPath').val();
                
                console.log('Current thumbnail path:', currentThumbnail);
                
                if (currentThumbnail && currentThumbnail !== '') {
                    console.log('Showing original thumbnail');
                    // Show original thumbnail
                    $('#thumbnailDisplay').attr('src', '/Uploads/' + currentThumbnail).show();
                    $('#noThumbnail').hide();
                    $('#btnRemoveThumbnail').show();
                } else {
                    console.log('Showing no thumbnail state');
                    // Show no thumbnail state
                    $('#thumbnailDisplay').hide();
                    $('#noThumbnail').show();
                    $('#btnRemoveThumbnail').hide();
                }
                
                $('.custom-file-label').text('Chọn hình ảnh mới...');
                console.log('Reset complete');
            }

            // Generate Keywords AJAX
            $('#btnGenerateKeywords').on('click', function() {
                var title = $('#Title').val();
                var description = $('.summernote').summernote('code');
                
                // Remove HTML tags for keywords generation
                var textDescription = $('<div>').html(description).text();
                
                if (!textDescription.trim()) {
                    Swal.fire('Lỗi', 'Vui lòng nhập nội dung trước khi tạo từ khóa', 'error');
                    return;
                }

                var baseUrl = '@Url.Action("GenerateKeywords", "Activitypost", new { Area = "Admin" })';
                
                $.ajax({
                    url: baseUrl,
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify({
                        title: title,
                        description: textDescription
                    }),
                    beforeSend: function() {
                        $('#btnGenerateKeywords').prop('disabled', true).html('<i class="fa fa-spinner fa-spin"></i> Đang tạo...');
                    },
                    success: function(response) {
                        if (response.status) {
                            $('#Keyword').val(response.data.keywords);
                            Swal.fire('Thành công', response.message, 'success');
                        } else {
                            Swal.fire('Lỗi', response.message, 'error');
                        }
                    },
                    error: function() {
                        Swal.fire('Lỗi', 'Có lỗi xảy ra khi tạo từ khóa', 'error');
                    },
                    complete: function() {
                        $('#btnGenerateKeywords').prop('disabled', false).html('<i class="fa fa-magic"></i> Tạo từ khóa tự động');
                    }
                });
            });

            // Generate Schema Markup AJAX
            $('#btnGenerateSchema').on('click', function() {
                var title = $('#Title').val();
                var description = $('.summernote').summernote('code');
                var url = $('#Url').val();
                var shortDescription = $('#Descriptionshort').val();
                
                // Remove HTML tags for schema generation
                var textDescription = $('<div>').html(description).text();
                
                // Validate all required fields
                if (!title.trim()) {
                    Swal.fire('Lỗi', 'Vui lòng nhập tiêu đề', 'error');
                    $('#Title').focus();
                    return;
                }
                
                if (!textDescription.trim()) {
                    Swal.fire('Lỗi', 'Vui lòng nhập nội dung chính', 'error');
                    $('.summernote').summernote('focus');
                    return;
                }
                
                if (!shortDescription.trim()) {
                    Swal.fire('Lỗi', 'Vui lòng nhập mô tả ngắn để tạo Schema', 'error');
                    $('#Descriptionshort').focus();
                    return;
                }
                
                if (!url.trim()) {
                    Swal.fire('Lỗi', 'Vui lòng nhập URL để tạo Schema', 'error');
                    $('#Url').focus();
                    return;
                }

                var baseUrl = '@Url.Action("GenerateSchemaMarkup", "Activitypost", new { Area = "Admin" })';
                
                // Get thumbnail URL - prefer new uploaded file, fallback to existing thumbnail
                var thumbnailUrl = '@Model.Thumbnail';
                var thumbnailFile = $('#thumbnailFile')[0].files[0];
                if (thumbnailFile) {
                    // For new files, we'll use a placeholder since file isn't uploaded yet
                    thumbnailUrl = '/uploads/activities/placeholder.jpg';
                }
                
                $.ajax({
                    url: baseUrl,
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify({
                        title: title,
                        description: shortDescription, // Use short description for schema
                        url: url,
                        thumbnail: thumbnailUrl
                    }),
                    beforeSend: function() {
                        $('#btnGenerateSchema').prop('disabled', true).html('<i class="fa fa-spinner fa-spin"></i> Đang tạo...');
                    },
                    success: function(response) {
                        if (response.status) {
                            $('#SchemaMakup').val(response.data.schemaMarkup);
                            Swal.fire('Thành công', response.message, 'success');
                        } else {
                            Swal.fire('Lỗi', response.message, 'error');
                        }
                    },
                    error: function() {
                        Swal.fire('Lỗi', 'Có lỗi xảy ra khi tạo Schema Markup', 'error');
                    },
                    complete: function() {
                        $('#btnGenerateSchema').prop('disabled', false).html('<i class="fa fa-code"></i> Tạo Schema tự động');
                    }
                });
            });

            function convertToSlug(text) {
                return text
                    .toLowerCase()
                    .replace(/á|à|ả|ạ|ã|ă|ắ|ằ|ẳ|ẵ|ặ|â|ấ|ầ|ẩ|ẫ|ậ/gi, 'a')
                    .replace(/é|è|ẻ|ẽ|ẹ|ê|ế|ề|ể|ễ|ệ/gi, 'e')
                    .replace(/i|í|ì|ỉ|ĩ|ị/gi, 'i')
                    .replace(/ó|ò|ỏ|õ|ọ|ô|ố|ồ|ổ|ỗ|ộ|ơ|ớ|ờ|ở|ỡ|ợ/gi, 'o')
                    .replace(/ú|ù|ủ|ũ|ụ|ư|ứ|ừ|ử|ữ|ự/gi, 'u')
                    .replace(/ý|ỳ|ỷ|ỹ|ỵ/gi, 'y')
                    .replace(/đ/gi, 'd')
                    .replace(/\s+/g, '-')
                    .replace(/[^\w\-]+/g, '')
                    .replace(/\-\-+/g, '-')
                    .replace(/^-+/, '')
                    .replace(/-+$/, '');
            }
        });
    </script>
}
