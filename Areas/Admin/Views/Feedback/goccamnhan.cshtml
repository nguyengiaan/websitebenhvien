@model websitebenhvien.Models.EnitityVM.FeedbackVM
@{
    ViewData["Title"] = "Quản lý góc cảm nhận";
}

<div class="container-fluid">
    <!-- Header -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center">
                <h1 class="h3 mb-0 text-gray-800 fw-bold">
                    <i class="fas fa-comments text-primary me-3"></i>Quản lý góc cảm nhận
                </h1>
                <button class="btn btn-primary btn-lg shadow-sm" onclick="openAddModal()">
                    <i class="fas fa-plus me-2"></i>Thêm cảm nhận
                </button>
            </div>
        </div>
    </div>

    <!-- Filter & Search -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="card shadow-sm border-0">
                <div class="card-body">
                    <div class="row g-3">
                        <div class="col-md-6">
                            <div class="input-group">
                                <span class="input-group-text bg-light border-end-0">
                                    <i class="fas fa-search text-muted"></i>
                                </span>
                                <input type="text" class="form-control border-start-0" id="searchInput" 
                                       placeholder="Tìm kiếm theo tên hoặc nội dung...">
                            </div>
                        </div>
                        <div class="col-md-3">
                            <select class="form-select" id="pageSize">
                                <option value="10">10 / trang</option>
                                <option value="20">20 / trang</option>
                                <option value="50">50 / trang</option>
                            </select>
                        </div>
                        <div class="col-md-3">
                            <button class="btn btn-outline-primary w-100" onclick="loadFeedbacks()">
                                <i class="fas fa-sync-alt me-2"></i>Làm mới
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Data Table -->
    <div class="row">
        <div class="col-12">
            <div class="card shadow-sm border-0">
                <div class="card-header bg-white border-bottom">
                    <h6 class="m-0 fw-bold text-primary">Danh sách cảm nhận </h6>
                </div>
                <div class="card-body p-0">
                    <div class="table-responsive">
                        <table class="table table-hover mb-0">
                            <thead class="table-light">
                                <tr>
                                    <th class="border-0 fw-bold">STT</th>
                                    <th class="border-0 fw-bold">Hình ảnh</th>
                                    <th class="border-0 fw-bold">Tiêu đề</th>
                                    <th class="border-0 fw-bold">Nội dung</th>
                                    <th class="border-0 fw-bold">Thao tác</th>
                                </tr>
                            </thead>
                            <tbody id="feedbackTableBody">
                                <!-- Data will be loaded here -->
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Pagination -->
    <div class="row mt-4">
        <div class="col-12">
            <nav aria-label="Pagination">
                <ul class="pagination justify-content-center" id="pagination">
                    <!-- Pagination will be generated here -->
                </ul>
            </nav>
        </div>
    </div>
</div>

<!-- Add/Edit Modal -->
<div class="modal fade" id="feedbackModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-centered">
        <div class="modal-content border-0 shadow-lg">
            <div class="modal-header bg-primary text-white">
                <h5 class="modal-title fw-bold" id="modalTitle">
                    <i class="fas fa-plus me-2"></i>Thêm cảm nhận
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <form id="feedbackForm">
                    <input type="hidden" id="feedbackId" name="Id">
                    
                    <div class="row g-3">
                        <div class="col-md-6">
                            <label class="form-label fw-semibold">Tiêu đề*</label>
                            <input type="text" class="form-control" id="titleName" name="Title_Name" required>
                        </div>
                        <div class="col-md-6">
                            <label class="form-label fw-semibold">Hình ảnh</label>
                            <input type="file" class="form-control" id="formFile" name="formFile" accept="image/*">
                            <div id="currentImage" class="mt-2" style="display: none;">
                                <img id="imagePreview" src="" alt="Current" class="img-thumbnail" style="max-width: 100px;">
                            </div>
                        </div>
                        <div class="col-12">
                            <label class="form-label fw-semibold">Nội dung cảm nhận *</label>
                            <textarea class="form-control" id="content" name="content" rows="4" required 
                                      placeholder="Nhập nội dung cảm nhận của khách hàng..."></textarea>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer bg-light">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                    <i class="fas fa-times me-2"></i>Hủy
                </button>
                <button type="button" class="btn btn-primary" onclick="saveFeedback()">
                    <i class="fas fa-save me-2"></i>Lưu
                </button>
            </div>
        </div>
    </div>
</div>

<!-- Loading Overlay -->
<div id="loadingOverlay" class="position-fixed top-0 start-0 w-100 h-100 bg-dark bg-opacity-50 d-none" style="z-index: 9999;">
    <div class="d-flex justify-content-center align-items-center h-100">
        <div class="spinner-border text-primary" role="status">
            <span class="visually-hidden">Loading...</span>
        </div>
    </div>
</div>

<script>
$(document).ready(function() {
    loadFeedbacks();
    
    // Search on input change with debounce
    let searchTimeout;
    $('#searchInput').on('input', function() {
        clearTimeout(searchTimeout);
        searchTimeout = setTimeout(() => {
            loadFeedbacks();
        }, 500);
    });
    
    // Page size change
    $('#pageSize').on('change', function() {
        loadFeedbacks();
    });
    
    // File input change
    $('#formFile').on('change', function() {
        const file = this.files[0];
        if (file) {
            const reader = new FileReader();
            reader.onload = function(e) {
                $('#imagePreview').attr('src', e.target.result);
                $('#currentImage').show();
            };
            reader.readAsDataURL(file);
        }
    });
});

let currentPage = 1;

function loadFeedbacks(page = 1) {
    currentPage = page;
    const search = $('#searchInput').val();
    const pageSize = $('#pageSize').val();
    
    showLoading();
    
    $.ajax({
        url: '/api-get-feedbacks',
        type: 'GET',
        data: {
            search: search,
            page: page,
            pagesize: pageSize
        },
        success: function(response) {
            hideLoading();
            if (response.status) {
                renderFeedbackTable(response.data.ds);
                renderPagination(response.data.totalPages, page);
            } else {
                showError('Không thể tải dữ liệu');
            }
        },
        error: function() {
            hideLoading();
            showError('Lỗi kết nối server');
        }
    });
}

function renderFeedbackTable(feedbacks) {
    const tbody = $('#feedbackTableBody');
    tbody.empty();
    
    if (feedbacks.length === 0) {
        tbody.append(`
            <tr>
                <td colspan="5" class="text-center py-4 text-muted">
                    <i class="fas fa-inbox fa-3x mb-3 d-block"></i>
                    Không có dữ liệu
                </td>
            </tr>
        `);
        return;
    }
    
    feedbacks.forEach((item, index) => {
        const stt = (currentPage - 1) * parseInt($('#pageSize').val()) + index + 1;
        const imageHtml = item.thumnail ? 
            `<img src="/Uploads/${item.thumnail}" alt="Image" class="img-thumbnail" style="width: 60px; height: 60px; object-fit: cover;">` :
            `<div class="bg-light rounded d-flex align-items-center justify-content-center" style="width: 60px; height: 60px;">
                <i class="fas fa-image text-muted"></i>
            </div>`;
        
        const shortContent = item.content && item.content.length > 100 ? 
            item.content.substring(0, 100) + '...' : item.content;
        
        tbody.append(`
            <tr>
                <td class="align-middle fw-semibold">${stt}</td>
                <td class="align-middle">${imageHtml}</td>
                <td class="align-middle fw-semibold">${item.title_Name || ''}</td>
                <td class="align-middle">
                    <span class="text-muted" title="${item.content || ''}">${shortContent || ''}</span>
                </td>
                <td class="align-middle">
                    <div class="btn-group" role="group">
                        <button class="btn btn-sm btn-outline-primary" onclick="editFeedback(${item.id})" title="Sửa">
                            <i class="fas fa-edit"></i>
                        </button>
                        <button class="btn btn-sm btn-outline-danger" onclick="deleteFeedback(${item.id})" title="Xóa">
                            <i class="fas fa-trash"></i>
                        </button>
                    </div>
                </td>
            </tr>
        `);
    });
}

function renderPagination(totalPages, currentPage) {
    const pagination = $('#pagination');
    pagination.empty();
    
    if (totalPages <= 1) return;
    
    // Previous button
    pagination.append(`
        <li class="page-item ${currentPage === 1 ? 'disabled' : ''}">
            <a class="page-link" href="#" onclick="loadFeedbacks(${currentPage - 1})">
                <i class="fas fa-chevron-left"></i>
            </a>
        </li>
    `);
    
    // Page numbers
    for (let i = 1; i <= totalPages; i++) {
        if (i === 1 || i === totalPages || (i >= currentPage - 2 && i <= currentPage + 2)) {
            pagination.append(`
                <li class="page-item ${i === currentPage ? 'active' : ''}">
                    <a class="page-link" href="#" onclick="loadFeedbacks(${i})">${i}</a>
                </li>
            `);
        } else if (i === currentPage - 3 || i === currentPage + 3) {
            pagination.append('<li class="page-item disabled"><span class="page-link">...</span></li>');
        }
    }
    
    // Next button
    pagination.append(`
        <li class="page-item ${currentPage === totalPages ? 'disabled' : ''}">
            <a class="page-link" href="#" onclick="loadFeedbacks(${currentPage + 1})">
                <i class="fas fa-chevron-right"></i>
            </a>
        </li>
    `);
}

function openAddModal() {
    $('#modalTitle').html('<i class="fas fa-plus me-2"></i>Thêm cảm nhận');
    $('#feedbackForm')[0].reset();
    $('#feedbackId').val('');
    $('#currentImage').hide();
    $('#feedbackModal').modal('show');
}

function editFeedback(id) {

    showLoading();
    
    $.ajax({
        url: `/api-get-feedback/${id}`,
        type: 'GET',
        success: function(response) {
            hideLoading();
            if (response.status) {
                const data = response.data;
                console.log(data.content);
                $('#modalTitle').html('<i class="fas fa-edit me-2"></i>Sửa cảm nhận');
                $('#feedbackId').val(data.id);
                $('#titleName').val(data.title_Name);
                $('#feedbackModal #content').val(data.content);

                
                if (data.thumnail) {
                    $('#imagePreview').attr('src', `/Uploads/${data.thumnail}`);
                    $('#currentImage').show();
                } else {
                    $('#currentImage').hide();
                }
                
                $('#feedbackModal').modal('show');
            } else {
                showError('Không thể tải dữ liệu');
            }
        },
        error: function() {
            hideLoading();
            showError('Lỗi kết nối server');
        }
    });
}

function saveFeedback() {
    const form = $('#feedbackForm')[0];
    if (!form.checkValidity()) {
        form.reportValidity();
        return;
    }
    
    const formData = new FormData(form);
    showLoading();
    
    $.ajax({
        url: '/api-save-feedback',
        type: 'POST',
        data: formData,
        processData: false,
        contentType: false,
        success: function(response) {
            hideLoading();
            if (response.status) {
                $('#feedbackModal').modal('hide');
                showSuccess(response.message);
                loadFeedbacks(currentPage);
            } else {
                showError(response.message);
            }
        },
        error: function() {
            hideLoading();
            showError('Lỗi kết nối server');
        }
    });
}

function deleteFeedback(id) {
    Swal.fire({
        title: 'Xác nhận xóa?',
        text: 'Bạn có chắc chắn muốn xóa cảm nhận này?',
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#d33',
        cancelButtonColor: '#3085d6',
        confirmButtonText: 'Xóa',
        cancelButtonText: 'Hủy'
    }).then((result) => {
        if (result.isConfirmed) {
            showLoading();
            
            $.ajax({
                url: '/api-delete-feedback',
                type: 'POST',
                data: { id: id },
                success: function(response) {
                    hideLoading();
                    if (response.status) {
                        showSuccess('Xóa thành công');
                        loadFeedbacks(currentPage);
                    } else {
                        showError('Xóa thất bại');
                    }
                },
                error: function() {
                    hideLoading();
                    showError('Lỗi kết nối server');
                }
            });
        }
    });
}

// Utility functions
function showLoading() {
    $('#loadingOverlay').removeClass('d-none');
}

function hideLoading() {
    $('#loadingOverlay').addClass('d-none');
}

function showSuccess(message) {
    Swal.fire({
        icon: 'success',
        title: 'Thành công!',
        text: message,
        timer: 2000,
        showConfirmButton: false
    });
}

function showError(message) {
    Swal.fire({
        icon: 'error',
        title: 'Lỗi!',
        text: message
    });
}
</script>

<style>
.table th {
    background-color: #f8f9fc;
    border-bottom: 1px solid #e3e6f0;
    font-weight: 600;
    color: #5a5c69;
    font-size: 0.85rem;
    text-transform: uppercase;
    letter-spacing: 0.5px;
}

.table td {
    padding: 1rem 0.75rem;
    border-bottom: 1px solid #e3e6f0;
    vertical-align: middle;
}

.table tbody tr:hover {
    background-color: #f8f9fc;
}

.btn-group .btn {
    margin-right: 0.25rem;
}

.btn-group .btn:last-child {
    margin-right: 0;
}

.page-link {
    color: #5a67d8;
    border-color: #e3e6f0;
}

.page-link:hover {
    color: #4c51bf;
    background-color: #f8f9fc;
    border-color: #e3e6f0;
}

.page-item.active .page-link {
    background-color: #5a67d8;
    border-color: #5a67d8;
}

.modal-content {
    border-radius: 0.75rem;
}

.modal-header {
    border-top-left-radius: 0.75rem;
    border-top-right-radius: 0.75rem;
}

.form-control:focus {
    border-color: #5a67d8;
    box-shadow: 0 0 0 0.2rem rgba(90, 103, 216, 0.25);
}

#loadingOverlay {
    backdrop-filter: blur(2px);
}
</style>
