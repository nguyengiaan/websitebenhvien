@model websitebenhvien.Models.EnitityVM.PaginatedMenuAdminVM
@{
    ViewData["Title"] = "Quản lý Menu Admin";
}

<div class="container-fluid mt-4">
    <!-- Page Header -->
    <div class="d-sm-flex align-items-center justify-content-between mb-4">
        <div>
            <h1 class="h3 mb-0 text-gray-800">
                <i class="fas fa-list-ul text-primary me-2"></i>
                Quản lý Menu Admin
            </h1>
            <p class="mb-0 text-muted">Danh sách tất cả menu trong hệ thống quản trị</p>
        </div>
        <div class="d-flex gap-2">
            <button class="btn btn-outline-info" onclick="refreshPage()">
                <i class="fas fa-sync-alt me-1"></i>
                Làm mới
            </button>
            <a asp-action="Create" class="btn btn-success btn-lg">
                <i class="fas fa-plus-circle me-2"></i>
                Thêm mới Menu
            </a>
        </div>
    </div>

    <!-- Alert Messages -->
    @if (TempData["Success"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show border-0 shadow-sm" role="alert">
            <i class="fas fa-check-circle me-2"></i>
            <strong>Thành công!</strong> @TempData["Success"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }
    @if (TempData["Error"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show border-0 shadow-sm" role="alert">
            <i class="fas fa-exclamation-triangle me-2"></i>
            <strong>Lỗi!</strong> @TempData["Error"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <!-- Search & Filter Section -->
    <div class="card border-0 shadow-sm mb-4">
        <div class="card-body">
            <div class="row align-items-center">
                <div class="col-md-6">
                    <form method="get" asp-action="Index" id="searchForm">
                        <div class="input-group">
                            <span class="input-group-text bg-primary text-white">
                                <i class="fas fa-search"></i>
                            </span>
                            <input type="text" name="searchTerm" value="@Model.SearchTerm" 
                                   class="form-control form-control-lg" 
                                   placeholder="Tìm kiếm theo tên menu hoặc URL..."
                                   id="searchInput">
                            <input type="hidden" name="page" value="1">
                            <input type="hidden" name="pageSize" value="@Model.PageSize">
                            <button type="submit" class="btn btn-primary">
                                <i class="fas fa-search me-1"></i>
                                Tìm kiếm
                            </button>
                            @if (!string.IsNullOrEmpty(Model.SearchTerm))
                            {
                                <a href="@Url.Action("Index")" class="btn btn-outline-secondary">
                                    <i class="fas fa-times me-1"></i>
                                    Xóa bộ lọc
                                </a>
                            }
                        </div>
                    </form>
                </div>
                <div class="col-md-6 text-end">
                    <div class="d-flex align-items-center justify-content-end gap-3">
                        <span class="text-muted">
                            <i class="fas fa-info-circle me-1"></i>
                            Hiển thị @Model.Items.Count() / @Model.TotalCount menu
                        </span>
                        <div class="dropdown">
                            <button class="btn btn-outline-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown">
                                <i class="fas fa-list me-1"></i>
                                @Model.PageSize mục/trang
                            </button>
                            <ul class="dropdown-menu">
                                <li><a class="dropdown-item" href="@Url.Action("Index", new { searchTerm = Model.SearchTerm, page = 1, pageSize = 5 })">5 mục/trang</a></li>
                                <li><a class="dropdown-item" href="@Url.Action("Index", new { searchTerm = Model.SearchTerm, page = 1, pageSize = 10 })">10 mục/trang</a></li>
                                <li><a class="dropdown-item" href="@Url.Action("Index", new { searchTerm = Model.SearchTerm, page = 1, pageSize = 20 })">20 mục/trang</a></li>
                                <li><a class="dropdown-item" href="@Url.Action("Index", new { searchTerm = Model.SearchTerm, page = 1, pageSize = 50 })">50 mục/trang</a></li>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Statistics Cards -->
    <div class="row mb-4">
        <div class="col-xl-3 col-md-6 mb-4">
            <div class="card border-left-primary shadow h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-primary text-uppercase mb-1">
                                Tổng số Menu
                            </div>
                            <div class="h5 mb-0 font-weight-bold text-gray-800">
                                @Model.TotalCount
                            </div>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-list fa-2x text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        
        <div class="col-xl-3 col-md-6 mb-4">
            <div class="card border-left-success shadow h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-success text-uppercase mb-1">
                                Menu có Icon
                            </div>
                            <div class="h5 mb-0 font-weight-bold text-gray-800">
                                @Model.Items.Count(x => !string.IsNullOrEmpty(x.Icon))
                            </div>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-image fa-2x text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        
        <div class="col-xl-3 col-md-6 mb-4">
            <div class="card border-left-info shadow h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-info text-uppercase mb-1">
                                Trang hiện tại
                            </div>
                            <div class="h5 mb-0 font-weight-bold text-gray-800">
                                @Model.CurrentPage / @Model.TotalPages
                            </div>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-file-alt fa-2x text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Menu Table -->
    <div class="card shadow border-0">
        <div class="card-header py-3 bg-gradient-primary">
            <div class="d-flex justify-content-between align-items-center">
                <h6 class="m-0 font-weight-bold text-white">
                    <i class="fas fa-table me-2"></i>
                    Danh sách Menu
                </h6>
                <div class="d-flex align-items-center gap-3">
                    <span class="text-white-50 small">
                        <i class="fas fa-info-circle me-1"></i>
                        Trang @Model.CurrentPage/@Model.TotalPages
                    </span>
                </div>
            </div>
        </div>
        
        <div class="card-body p-0">
            @if (Model.Items != null && Model.Items.Any())
            {
                <div class="table-responsive">
                    <table class="table table-hover mb-0" id="menuTable">
                        <thead class="bg-light">
                            <tr>
                                <th class="border-0 text-center" style="width: 60px;">
                                    <i class="fas fa-hashtag text-muted"></i>
                                </th>
                                <th class="border-0" style="width: 80px;">
                                    <i class="fas fa-image text-muted me-1"></i>
                                    Icon
                                </th>
                                <th class="border-0">
                                    <i class="fas fa-heading text-muted me-1"></i>
                                    Tiêu đề
                                </th>
                                <th class="border-0">
                                    <i class="fas fa-link text-muted me-1"></i>
                                    Đường dẫn
                                </th>
                                <th class="border-0 text-center" style="width: 200px;">
                                    <i class="fas fa-cogs text-muted me-1"></i>
                                    Thao tác
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                        @{
                            int startIndex = (Model.CurrentPage - 1) * Model.PageSize + 1;
                            int index = startIndex;
                            foreach (var item in Model.Items)
                            {
                                <tr class="menu-row" data-id="@item.id">
                                    <td class="text-center align-middle">
                                        <span class="badge bg-secondary">@index</span>
                                    </td>
                                    <td class="align-middle">
                                        <div class="icon-container">
                                            @if (!string.IsNullOrEmpty(item.Icon))
                                            {
                                                <div class="icon-preview">
                                                    <img src="@item.Icon" alt="@item.Title" 
                                                         class="rounded shadow-sm" 
                                                         style="width:40px;height:40px;object-fit:contain;border:2px solid #e3e6f0;" />
                                                </div>
                                            }
                                            else
                                            {
                                                <div class="no-icon-placeholder">
                                                    <div class="d-flex align-items-center justify-content-center bg-light rounded" 
                                                         style="width:40px;height:40px;border:2px dashed #d1d3e2;">
                                                        <i class="fas fa-image text-muted"></i>
                                                    </div>
                                                </div>
                                            }
                                        </div>
                                    </td>
                                    <td class="align-middle">
                                        <div class="menu-title">
                                            <strong class="text-gray-800">@item.Title</strong>
                                        </div>
                                    </td>
                                    <td class="align-middle">
                                        <div class="menu-url">
                                            <code class="bg-light px-2 py-1 rounded text-primary">@item.Url</code>
                                        </div>
                                    </td>
                                    <td class="text-center align-middle">
                                        <div class="btn-group" role="group">
                                            <a asp-action="Edit" asp-route-id="@item.id" 
                                               class="btn btn-sm btn-outline-primary" 
                                               title="Chỉnh sửa menu">
                                                <i class="fas fa-edit"></i>
                                            </a>
                                            <button type="button" 
                                                    class="btn btn-sm btn-outline-danger" 
                                                    onclick="confirmDelete(@item.id, '@Html.Raw(Html.Encode(item.Title))')"
                                                    title="Xóa menu">
                                                <i class="fas fa-trash"></i>
                                            </button>
                                        </div>
                                    </td>
                                </tr>
                                index++;
                            }
                        }
                        </tbody>
                    </table>
                </div>
                
                <!-- Pagination -->
                @if (Model.TotalPages > 1)
                {
                    <div class="card-footer bg-light">
                        <nav aria-label="Menu pagination">
                            <ul class="pagination justify-content-center mb-0">
                                <!-- Previous Page -->
                                <li class="page-item @(Model.HasPrevious ? "" : "disabled")">
                                    <a class="page-link" href="@(Model.HasPrevious ? Url.Action("Index", new { searchTerm = Model.SearchTerm, page = Model.CurrentPage - 1, pageSize = Model.PageSize }) : "#")" 
                                       aria-label="Previous">
                                        <span aria-hidden="true">&laquo;</span>
                                    </a>
                                </li>

                                <!-- First Page -->
                                @if (Model.StartPage > 1)
                                {
                                    <li class="page-item">
                                        <a class="page-link" href="@Url.Action("Index", new { searchTerm = Model.SearchTerm, page = 1, pageSize = Model.PageSize })">1</a>
                                    </li>
                                    @if (Model.StartPage > 2)
                                    {
                                        <li class="page-item disabled">
                                            <span class="page-link">...</span>
                                        </li>
                                    }
                                }

                                <!-- Page Numbers -->
                                @for (int i = Model.StartPage; i <= Model.EndPage; i++)
                                {
                                    <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                                        <a class="page-link" href="@Url.Action("Index", new { searchTerm = Model.SearchTerm, page = i, pageSize = Model.PageSize })">@i</a>
                                    </li>
                                }

                                <!-- Last Page -->
                                @if (Model.EndPage < Model.TotalPages)
                                {
                                    @if (Model.EndPage < Model.TotalPages - 1)
                                    {
                                        <li class="page-item disabled">
                                            <span class="page-link">...</span>
                                        </li>
                                    }
                                    <li class="page-item">
                                        <a class="page-link" href="@Url.Action("Index", new { searchTerm = Model.SearchTerm, page = Model.TotalPages, pageSize = Model.PageSize })">@Model.TotalPages</a>
                                    </li>
                                }

                                <!-- Next Page -->
                                <li class="page-item @(Model.HasNext ? "" : "disabled")">
                                    <a class="page-link" href="@(Model.HasNext ? Url.Action("Index", new { searchTerm = Model.SearchTerm, page = Model.CurrentPage + 1, pageSize = Model.PageSize }) : "#")" 
                                       aria-label="Next">
                                        <span aria-hidden="true">&raquo;</span>
                                    </a>
                                </li>
                            </ul>
                        </nav>
                        
                        <div class="text-center mt-2">
                            <small class="text-muted">
                                Hiển thị @((Model.CurrentPage - 1) * Model.PageSize + 1) - @Math.Min(Model.CurrentPage * Model.PageSize, Model.TotalCount) 
                                trong tổng số @Model.TotalCount menu
                            </small>
                        </div>
                    </div>
                }
            }
            else
            {
                <div class="empty-state text-center py-5">
                    <div class="mb-4">
                        @if (!string.IsNullOrEmpty(Model.SearchTerm))
                        {
                            <i class="fas fa-search fa-4x text-gray-300"></i>
                        }
                        else
                        {
                            <i class="fas fa-inbox fa-4x text-gray-300"></i>
                        }
                    </div>
                    @if (!string.IsNullOrEmpty(Model.SearchTerm))
                    {
                        <h5 class="text-gray-600 mb-2">Không tìm thấy kết quả</h5>
                        <p class="text-muted mb-4">Không có menu nào phù hợp với từ khóa "@Model.SearchTerm"</p>
                        <a href="@Url.Action("Index")" class="btn btn-outline-primary">
                            <i class="fas fa-arrow-left me-2"></i>
                            Xem tất cả menu
                        </a>
                    }
                    else
                    {
                        <h5 class="text-gray-600 mb-2">Chưa có menu nào</h5>
                        <p class="text-muted mb-4">Hãy tạo menu đầu tiên cho hệ thống quản trị của bạn</p>
                        <a asp-action="Create" class="btn btn-primary btn-lg">
                            <i class="fas fa-plus-circle me-2"></i>
                            Tạo Menu đầu tiên
                        </a>
                    }
                </div>
            }
        </div>
    </div>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content border-0 shadow">
            <div class="modal-header bg-danger text-white">
                <h5 class="modal-title" id="deleteModalLabel">
                    <i class="fas fa-exclamation-triangle me-2"></i>
                    Xác nhận xóa Menu
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="text-center mb-3">
                    <i class="fas fa-trash-alt fa-3x text-danger mb-3"></i>
                    <h6>Bạn có chắc chắn muốn xóa menu này?</h6>
                    <p class="text-muted mb-0">Menu: <strong id="menuNameToDelete"></strong></p>
                    <small class="text-warning">
                        <i class="fas fa-exclamation-triangle me-1"></i>
                        Hành động này không thể hoàn tác!
                    </small>
                </div>
            </div>
            <div class="modal-footer border-0">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                    <i class="fas fa-times me-1"></i>
                    Hủy bỏ
                </button>
                <form id="deleteForm" method="post" style="display: inline;">
                    @Html.AntiForgeryToken()
                    <button type="submit" class="btn btn-danger">
                        <i class="fas fa-trash me-1"></i>
                        Xóa Menu
                    </button>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Custom Styles -->
<style>
    .border-left-primary {
        border-left: 4px solid #4e73df !important;
    }
    
    .border-left-success {
        border-left: 4px solid #1cc88a !important;
    }
    
    .border-left-info {
        border-left: 4px solid #36b9cc !important;
    }
    
    .card {
        border-radius: 15px;
        overflow: hidden;
    }
    
    .card-header {
        border-radius: 15px 15px 0 0 !important;
    }
    
    .menu-row {
        transition: all 0.3s ease;
    }
    
    .menu-row:hover {
        background-color: #f8f9fc;
        transform: translateY(-1px);
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    }
    
    .btn {
        border-radius: 8px;
        transition: all 0.3s ease;
    }
    
    .btn:hover {
        transform: translateY(-1px);
    }
    
    .icon-preview img {
        transition: transform 0.3s ease;
    }
    
    .icon-preview:hover img {
        transform: scale(1.1);
    }
    
    .alert {
        border-radius: 10px;
        border: none;
    }
    
    .empty-state {
        padding: 3rem 1rem;
    }
    
    .btn-group .btn {
        margin: 0 2px;
    }
    
    .table th {
        font-weight: 600;
        font-size: 0.875rem;
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }
    
    @@media (max-width: 768px) {
        .btn-group {
            flex-direction: column;
            gap: 5px;
        }
        
        .btn-group .btn {
            margin: 0;
        }
    }
</style>

<!-- JavaScript -->
<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Auto-hide alerts after 5 seconds
        const alerts = document.querySelectorAll('.alert');
        alerts.forEach(alert => {
            setTimeout(() => {
                if (alert.parentNode) {
                    alert.style.transition = 'opacity 0.5s ease';
                    alert.style.opacity = '0';
                    setTimeout(() => {
                        if (alert.parentNode) {
                            alert.remove();
                        }
                    }, 500);
                }
            }, 5000);
        });
        
        // Add hover effects to table rows
        const menuRows = document.querySelectorAll('.menu-row');
        menuRows.forEach(row => {
            row.addEventListener('mouseenter', function() {
                this.style.transform = 'translateY(-2px)';
            });
            
            row.addEventListener('mouseleave', function() {
                this.style.transform = 'translateY(0)';
            });
        });
    });
    
    // Delete confirmation function
    function confirmDelete(menuId, menuTitle) {
        document.getElementById('menuNameToDelete').textContent = menuTitle;
        document.getElementById('deleteForm').action = '/Admin/MenuAdmin/Delete/' + menuId;
        
        const deleteModal = new bootstrap.Modal(document.getElementById('deleteModal'));
        deleteModal.show();
    }
    
    // Refresh page function
    function refreshPage() {
        location.reload();
    }
</script>
@section Scripts {
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" />
}