<div class="container-fluid">
    <div class="card">
        <div class="card-header py-3 d-flex justify-content-between align-items-center">
            <h5 class="mb-0 fw-bold">Quản lý tin tức</h5>
            <button class="btn btn-primary rounded-pill px-4" onclick="openNewsModal()">
                <i class="fas fa-plus me-2"></i>Thêm tin tức
            </button>
        </div>

        <div class="card-body">
            <div class="row mb-3">
                <div class="col-md-4">
                    <div class="input-group">
                        <input type="text" class="form-control" id="searchInput" placeholder="Tìm kiếm..." onchange="searchNews()">
                        <button class="btn btn-outline-secondary" onclick="searchNews()">
                            <i class="fas fa-search"></i>
                        </button>
                    </div>
                </div>
                <div class="col-md-4">
                    <select class="form-select" id="categoryFilter" onchange="filterByCategory()">
                        <option value="">Tất cả danh mục</option>
                    </select>
                </div>
            </div>

            <div class="table-responsive">
                <table class="table table-hover align-middle mb-0">
                    <thead class="bg-light">
                        <tr>
                            <th class="ps-4" style="width: 5%">STT</th>
                            <th style="width: 20%">Tiêu đề</th>
                            <th style="width: 15%">Ảnh đại diện</th>
                            <th style="width: 15%">Danh mục</th>
                            <th style="width: 15%">Ngày đăng</th>
                            <th style="width: 20%">Đường dẫn</th>
                            <th style="width: 10%">Bài viết nổi bật</th>
                            <th style="width: 25%" class="text-center">Thao tác</th>
                        </tr>
                    </thead>
                    <tbody id="newsTableBody">
                    </tbody>
                </table>
            </div>
        </div>

        <div class="card-footer bg-white py-3">
            <nav>
                <ul class="pagination justify-content-center mb-0" id="pagination">
                </ul>
            </nav>
        </div>
    </div>
</div>

<!-- Modal -->
<div class="modal fade" id="newsModal" tabindex="-1">
    <div class="modal-dialog modal-dialog-centered modal-lg">
        <div class="modal-content border-0">
            <div class="modal-header border-bottom-0">
                <h5 class="modal-title fw-bold" id="modalTitle">Thêm tin tức</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="newsForm">
                    <input type="hidden" id="id_News" name="id_News">
                    <div class="row mb-3">
                        <div class="col-md-6">
                            <label class="form-label">Tiêu đề</label>
                            <input type="text" class="form-control" id="title" name="title" required onchange="generateNewsAlias(this.value)">
                        </div>
                        <div class="col-md-6">
                            <label class="form-label">Danh mục</label>
                            <select class="form-select" id="id_Categorynews" name="id_Categorynews" onchange="generateNewsAlias($('#title').val())">
                            </select>
                        </div>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Đường dẫn</label>
                        <input type="text" class="form-control" id="alias_url" name="alias_url">
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Hình ảnh đại diện</label>
                        <div class="input-group">
                            <input type="file" class="form-control" id="formFile" name="formFile">
                            <button class="btn btn-outline-secondary" type="button" onclick="openElfinder()">
                                <i class="fas fa-folder-open"></i>
                            </button>
                        </div>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Mô tả</label>
                        <textarea id="description" name="description" class="summernote" value="#"></textarea>
                    </div>
                </form>
            </div>
            <div class="modal-footer border-top-0">
                <button type="button" class="btn btn-light rounded-pill px-4" data-bs-dismiss="modal">Đóng</button>
                <button type="button" class="btn btn-primary rounded-pill px-4" onclick="saveNews()">Lưu</button>
            </div>
        </div>
    </div>
</div>
@{
    var summenote = new websitebenhvien.Models.EnitityVM.Summenote(".summernote");
}
<partial name="_Summernote" model="summenote" />
@section Scripts {
    <script>
        let currentPage = 1;
        const pageSize = 20;
        $(document).ready(function() {
            $('#newsModal').on('hidden.bs.modal', function () {
                $('#newsForm')[0].reset();
                $('#description').summernote('code', '');
                $('#id_News').val('');
                $('#modalTitle').text('Thêm tin tức');
            });
            loadCategories();
            loadNews();
        });

        function openElfinder() {
            var fm = $('<div/>').dialogelfinder({
                url: '@Url.Action("Connector", "Filemanager")',
                lang: 'vi',
                width: 850,
                height: 450,
                destroyOnClose: true,
                getFileCallback: function(files, fm) {
                    // Create a new FileList object
                    const fileUrl = files.url;
                    fetch(fileUrl)
                        .then(response => response.blob())
                        .then(blob => {
                            // Create File object
                            const file = new File([blob], files.name, { type: blob.type });
                            
                            // Create DataTransfer
                            const dataTransfer = new DataTransfer();
                            dataTransfer.items.add(file);
                            
                            // Set files
                            document.getElementById('formFile').files = dataTransfer.files;
                        });
                }
            }).dialogelfinder('instance');
        }

        function loadCategories() {
            $.ajax({
                url: '/Allinone/ListCatogeryNews',
                type: 'GET',
                success: function(response) {
                    if (response.status) {
                        const categories = response.data;
                        $('#categoryFilter').empty().append('<option value="">Tất cả danh mục</option>');
                        $('#id_Categorynews').empty();
                        
                        categories.forEach(category => {
                            $('#categoryFilter').append(`<option value="${category.id_Categorynews}">${category.title}</option>`);
                            $('#id_Categorynews').append(`<option value="${category.id_Categorynews}">${category.title}</option>`);
                        });
                    }
                }
            });
        }
        function loadNews(page = 1) {
            $.ajax({
                url: '/Allinone/Listnews',
                type: 'GET',
                success: function(response) {
                    if (!response.status) return;

                    currentPage = page;
                    const categoryId = $('#categoryFilter').val();
                    const searchTerm = $('#searchInput').val().toLowerCase();

                    // Lọc dữ liệu một lần duy nhất
                    const filteredData = response.data.filter(item => {
                        const matchesCategory = !categoryId || item.id_Categorynews === categoryId;
                        const matchesSearch = !searchTerm || 
                            item.title.toLowerCase().includes(searchTerm) ||
                            item.description?.toLowerCase().includes(searchTerm) ||
                            item.alias_url.toLowerCase().includes(searchTerm);
                        return matchesCategory && matchesSearch;
                    });

                    // Tính toán phân trang
                    const startIndex = (page - 1) * pageSize;
                    const paginatedData = filteredData.slice(startIndex, startIndex + pageSize);
                    const totalPages = Math.ceil(filteredData.length / pageSize);

                    // Render dữ liệu
                    renderNews(paginatedData);
                    renderPagination(totalPages, page);
                }
            });
        }

        function renderNews(data) {
            console.log(data);  
            const tbody = $('#newsTableBody');
            tbody.empty();
            
            data.forEach((item, index) => {
                const startIndex = (currentPage - 1) * pageSize;
                tbody.append(`
                    <tr>
                        <td class="ps-4">${startIndex + index + 1}</td>
                        <td>${item.title}</td>
                        <td><img src="/Resources/${item.url}" alt="News Image" width="50"></td>
                        <td>${getCategoryName(item.id_Categorynews)}</td>
                        <td>${item.createat.split('T')[0]   }</td>
                        <td>${item.alias_url}</td>
                        <td>
                            <div class="form-check form-switch">
                                <input class="form-check-input" type="checkbox" role="switch" 
                                    id="status_${item.id_News}" 
                                    ${item.status ? 'checked' : ''}
                                    onchange="updateNewsStatus('${item.id_News}')">
                                <label class="form-check-label" for="status_${item.id_News}">
                                    ${item.status ? 'Hiện' : 'Ẩn'}
                                </label>
                            </div>
                        </td>
                        <td class="text-center">
                            <div class="d-flex justify-content-center">
                                <button class="btn btn-sm btn-primary me-2" onclick="editNews('${item.id_News}')" 
                                        data-bs-toggle="tooltip" title="Sửa">
                                    <i class="fas fa-edit"></i>
                                </button>
                                <button class="btn btn-sm btn-danger" onclick="deleteNews('${item.id_News}')"
                                        data-bs-toggle="tooltip" title="Xóa">
                                    <i class="fas fa-trash"></i>
                                </button>
                            </div>
                        </td>
                    </tr>
                `);
            });
        }

        function renderPagination(totalPages, currentPage) {
            const pagination = $('#pagination');
            pagination.empty();

            for (let i = 1; i <= totalPages; i++) {
                pagination.append(`
                    <li class="page-item ${i === currentPage ? 'active' : ''}">
                        <a class="page-link" href="#" onclick="loadNews(${i})">${i}</a>
                    </li>
                `);
            }
        }

        function getCategoryName(categoryId) {
            const category = $('#categoryFilter option[value="' + categoryId + '"]').text();
            return category || '';
        }

        function generateNewsAlias(title) {
            const alias = title.toLowerCase()
                .normalize('NFD')
                .replace(/[\u0300-\u036f]/g, '')
                .replace(/[đĐ]/g, 'd')
                .replace(/([^0-9a-z-\s])/g, '')
                .replace(/(\s+)/g, '-')
                .replace(/-+/g, '-')
                .replace(/^-+|-+$/g, '');
            const categoryAlias = $('#id_Categorynews option:selected').text().toLowerCase()
                .normalize('NFD')
                .replace(/[\u0300-\u036f]/g, '')
                .replace(/[đĐ]/g, 'd')
                .replace(/([^0-9a-z-\s])/g, '')
                .replace(/(\s+)/g, '-')
                .replace(/-+/g, '-')
                .replace(/^-+|-+$/g, '');
            $('#alias_url').val('bai-viet/' + categoryAlias + '/' + alias);
        }

        function openNewsModal() {
            $('#modalTitle').text('Thêm tin tức');
            $('#newsForm')[0].reset();
            $('#id_News').val('');
            $('#newsModal').modal('show');
        }

        function searchNews() {
            loadNews(1);
        }

        function filterByCategory() {
            loadNews(1);
        }

        // Các hàm CRUD sẽ được thêm vào đây khi có API tương ứng
        function saveNews() {
            // Get form data
            const form = $('#newsForm')[0];
            const formData = new FormData(form);

            // Validate required fields
            if (!formData.get('title') || !formData.get('id_Categorynews')) {
                Swal.fire({
                    title: 'Lỗi!',
                    text: 'Vui lòng điền đầy đủ thông tin bắt buộc',
                    icon: 'error',
                    confirmButtonText: 'OK'
                });
                return;
            }

            // Add description from summernote
            formData.set('description', $('#description').summernote('code'));

            // Send AJAX request
            $.ajax({
                url: '/Allinone/AddNews',
                type: 'POST',
                data: formData,
                processData: false,
                contentType: false,
                success: function(response) {
                    if (response.status) {
                        Swal.fire({
                            title: 'Thành công!',
                            text: response.message,
                            icon: 'success',
                            confirmButtonText: 'OK'
                        }).then((result) => {
                            if (result.isConfirmed) {
                                $('#newsModal').modal('hide');
                                loadNews(currentPage);
                                $('#description').summernote('code', '');
                                $('#newsForm')[0].reset();
                            }
                        });
                    } else {
                        Swal.fire({
                            title: 'Lỗi!',
                            text: response.message,
                            icon: 'error',
                            confirmButtonText: 'OK'
                        });
                    }
                },
                error: function(xhr, status, error) {
                    Swal.fire({
                        title: 'Lỗi!',
                        text: 'Có lỗi xảy ra khi kết nối với server',
                        icon: 'error',
                        confirmButtonText: 'OK'
                    });
                }
            });
        }

        function deleteNews(id) {
            Swal.fire({
                title: 'Xác nhận xóa?',
                text: "Bạn có chắc chắn muốn xóa tin tức này không?",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6', 
                cancelButtonColor: '#d33',
                confirmButtonText: 'Đồng ý',
                cancelButtonText: 'Hủy'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: '/Allinone/DeleteNews',
                        type: 'POST',
                        data: { id: id },
                        success: function(response) {
                            if (response.status) {
                                Swal.fire({
                                    title: 'Thành công!',
                                    text: response.message,
                                    icon: 'success',
                                    confirmButtonText: 'OK'
                                }).then((result) => {
                                    if (result.isConfirmed) {
                                        loadNews(currentPage);
                                    }
                                });
                            } else {
                                Swal.fire({
                                    title: 'Lỗi!',
                                    text: response.message,
                                    icon: 'error',
                                    confirmButtonText: 'OK'
                                });
                            }
                        },
                        error: function(xhr, status, error) {
                            Swal.fire({
                                title: 'Lỗi!',
                                text: 'Có lỗi xảy ra khi kết nối với server',
                                icon: 'error',
                                confirmButtonText: 'OK'
                            });
                        }
                    });
                }
            });
        }
        function editNews(id) {
            $('#modalTitle').text('Sửa tin tức');
            $('#newsForm')[0].reset();
            
            $.ajax({
                url: '/Allinone/GetNewsById',
                type: 'POST',
                data: { id: id },
                success: function(response) {
                    if (response.status) {
                        const news = response.data;
                        
                        $('#id_News').val(news.id_News);
                        $('#title').val(news.title);
                        $('#id_Categorynews').val(news.id_Categorynews);
                        $('#alias_url').val(news.alias_url);
                        $('#description').summernote('code', news.description);
                        
                
                      
                        
                        $('#newsModal').modal('show');
                    } else {
                        Swal.fire({
                            title: 'Lỗi!',
                            text: response.message,
                            icon: 'error',
                            confirmButtonText: 'OK'
                        });
                    }
                },
                error: function(xhr, status, error) {
                    Swal.fire({
                        title: 'Lỗi!',
                        text: 'Có lỗi xảy ra khi kết nối với server',
                        icon: 'error',
                        confirmButtonText: 'OK'
                    });
                }
            });
        }
        // update status news
        function updateNewsStatus(id) {
            $.ajax({
                url: '/Allinone/UpdateStatusNews',
                type: 'POST',
                data: { id: id },
                success: function(response) {
                    if (response.status) {
                        loadNews(currentPage);
                    }
                }
            });
        }
            
    </script>
}