@{
    ViewData["Title"] = "Đăng tin tuyển dụng";

}

<div class="container-fluid">

    <div class="card border-0 shadow-sm">
        <div class="card-header bg-white py-3">
            <div class="row g-3 align-items-center">
                <div class="col-md-6">
                    <button class="btn btn-primary rounded-pill px-4" onclick="showAddModal()">
                        <i class="fas fa-plus me-2"></i>Đăng tin tuyển dụng
                    </button>
                </div>
                <div class="col-md-6">
                    <div class="input-group">
                        <input type="text" class="form-control border-end-0" id="searchInput"
                               placeholder="Tìm kiếm danh mục...">
                        <button class="btn btn-outline-secondary border-start-0" onclick="searchCategories()">
                            <i class="fas fa-search"></i>
                        </button>
                    </div>
                </div>
            </div>
        </div>

        <div class="card-body px-0">
            <div class="table-responsive">
                <table class="table table-hover align-middle mb-0">
                    <thead class="bg-light">
                        <tr>
                            <th class="ps-4" style="width: 5%">STT</th>
                            <th style="width: 25%">Tiêu đề</th>
                            <th style="width: 25%">Đường dẫn</th>
                            <th style="width: 30%">Mô tả</th>
                            <th style="width: 15%" class="text-center">Thao tác</th>
                        </tr>
                    </thead>
                    <tbody id="categoryTableBody">
                    </tbody>
                </table>
            </div>
        </div>

        <div class="card-footer bg-white py-3">
            <nav>
                <ul class="pagination justify-content-center mb-0" id="pagination">
                </ul>
            </nav>
        </div>
    </div>
</div>

<!-- Modal -->
<div class="modal fade" id="categoryModal" tabindex="-1">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content border-0">
            <div class="modal-header border-bottom-0">
                <h5 class="modal-title fw-bold" id="modalTitle">Thêm tuyển dụng</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="categoryForm">
                    <input type="hidden" id="id_recruitmentpost" name="id_recruitmentpost" value="0">
                    <div class="mb-3">
                        <label class="form-label">Tiêu đề tuyển dụng</label>
                        <input type="text" class="form-control" id="title_recruitmentpost" name="title_recruitmentpost" >
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Trạng thái tuyển dụng</label>
                        <select class="form-control" id="Status" name="Status">
                            <option value="1">Đang tuyển dụng</option>
                            <option value="0">Ngừng tuyển dụng</option>
						</select>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Mô tả tuyển dụng</label>
                        <textarea class="form-control" id="Content_recruitmentpost" name="Content_recruitmentpost" rows="3"></textarea>
                    </div>
                </form>
            </div>
            <div class="modal-footer border-top-0">
                <button type="button" class="btn btn-light rounded-pill px-4" data-bs-dismiss="modal">Đóng</button>
                <button type="button" class="btn btn-primary rounded-pill px-4" onclick="savetuyendung()">Lưu</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        let currentPage = 1;
        const pageSize = 10;

        $(document).ready(function() {
            loadCategories();
        });

        function loadCategories(page = 1) {
            $.ajax({
                url: '/Allinone/ListCatogeryNews',
                type: 'GET',
                success: function(response) {
                    if (response.status) {
                        currentPage = page;
                        const allData = response.data;

                        // Tìm kiếm nếu có
                        const searchTerm = $('#searchInput').val().toLowerCase();
                        const filteredData = allData.filter(item =>
                            item.title.toLowerCase().includes(searchTerm) ||
                            item.description?.toLowerCase().includes(searchTerm) ||
                            item.alias_url.toLowerCase().includes(searchTerm)
                        );

                        // Tính toán phân trang
                        const totalItems = filteredData.length;
                        const totalPages = Math.ceil(totalItems / pageSize);
                        const startIndex = (page - 1) * pageSize;
                        const endIndex = Math.min(startIndex + pageSize, totalItems);

                        // Lấy dữ liệu cho trang hiện tại
                        const paginatedData = filteredData.slice(startIndex, endIndex);

                        renderCategories(paginatedData);
                        renderPagination(totalPages, page);
                    }
                },
                error: function(xhr, status, error) {
                    Swal.fire({
                        title: 'Lỗi!',
                        text: 'Không thể tải danh sách danh mục',
                        icon: 'error'
                    });
                }
            });
        }

        function renderCategories(categories) {
            let html = '';
            categories.forEach((category, index) => {
                html += `
                    <tr class="align-middle">
                        <td class="ps-4">${(currentPage - 1) * pageSize + index + 1}</td>
                        <td>${category.title}</td>
                        <td>${category.alias_url}</td>
                        <td>${category.description || 'Chưa có mô tả'}</td>
                        <td class="text-center">
                            <div class="btn-group">
                                <button class="btn btn-outline-primary btn-sm"
                                        onclick="editCategory('${category.id_Categorynews}', '${category.title}', '${category.alias_url}', '${category.description}')"
                                        title="Chỉnh sửa">
                                    <i class="fas fa-edit"></i>
                                </button>
                                <button class="btn btn-outline-danger btn-sm"
                                        onclick="deleteCategory('${category.id_Categorynews}')"
                                        title="Xóa">
                                    <i class="fas fa-trash"></i>
                                </button>
                            </div>
                        </td>
                    </tr>
                `;
            });
            $('#categoryTableBody').html(html);
        }

        function renderPagination(totalPages, currentPage) {
            let html = '';
            for (let i = 1; i <= totalPages; i++) {
                html += `
                    <li class="page-item ${i === currentPage ? 'active' : ''}">
                        <a class="page-link" href="#" onclick="loadCategories(${i})">${i}</a>
                    </li>
                `;
            }
            $('#pagination').html(html);
        }

        function showAddModal() {
            $('#modalTitle').text('Thêm danh mục');
            $('#categoryForm')[0].reset();
            $('#id_Categorynews').val('');
            $('#categoryModal').modal('show');
        }
        function editCategory(id, title, alias_url, description) {
            $('#modalTitle').text('Sửa danh mục');
            $('#id_Categorynews').val(id);
            $('#title').val(title);
            $('#alias_url').val(alias_url);
            $('#description').val(description);
            $('#categoryModal').modal('show');
        }

        function savetuyendung() {
			var id=$('#id_recruitmentpost').val();
			var title=$('#title_recruitmentpost').val();
			var status=$('#Status').val();
            var content=$('#Content_recruitmentpost').val();
			if (title == '' || content =='' ) {
				Swal.fire({
					title: 'Lỗi!',
					text: 'Thiếu thông tin',
					icon: 'error'
				});
				return;
			}
	
            $.ajax({
                url: '/api-tuyen-dung-benh-vien',
                type: 'POST',
                data: {id:id,title_recruitmentpost:title,Content_recruitmentpost:content,Status:status},
                success: function(response) {
                      if (response.status) {
                        $('#categoryModal').modal('hide');
                        Swal.fire({
                            title: 'Thành công!',
                            text: isNew ? 'Thêm danh mục thành công' : 'Cập nhật danh mục thành công',
                            icon: 'success'
                        });
                        $('#categoryForm')[0].reset();
                        loadCategories(currentPage);

                    } else {
                        Swal.fire({
                            title: 'Lỗi!',
                            text: response.message,
                            icon: 'error'
                        });
                    }
                }
            });
        }

        function deleteCategory(id) {
            Swal.fire({
                title: 'Xác nhận xóa?',
                text: "Bạn có chắc chắn muốn xóa danh mục này?",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Xóa',
                cancelButtonText: 'Hủy'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: '/Allinone/DeleteCatogery',
                        type: 'POST',
                        data: { id: id },
                        success: function(response) {
                            if (response.status) {
                                Swal.fire({
                                    title: 'Thành công!',
                                    text: 'Xóa danh mục thành công',
                                    icon: 'success'
                                });
                                loadCategories(currentPage);
                            } else {
                                Swal.fire({
                                    title: 'Lỗi!',
                                    text: response.message,
                                    icon: 'error'
                                });
                            }
                        }
                    });
                }
            });
        }

        function searchCategories() {
            currentPage = 1;
            loadCategories();
        }

        $('#searchInput').on('keypress', function(e) {
            if (e.which === 13) {
                searchCategories();
            }
        });
        function generateAlias(str) {
            // Chuyển về chữ thường
            str = str.toLowerCase();

            // Xóa dấu
            str = str.normalize('NFD').replace(/[\u0300-\u036f]/g, '');

            // Thay thế ký tự đặc biệt bằng dấu gạch ngang
            str = str.replace(/[^a-z0-9 -]/g, '')
                    .replace(/\s+/g, '-')     // Thay khoảng trắng bằng dấu gạch ngang
                    .replace(/-+/g, '-');      // Xóa nhiều dấu gạch ngang liên tiếp

            // Xóa dấu gạch ngang ở đầu và cuối
            str = str.replace(/^-+|-+$/g, '');
            $('#categoryForm').find('#alias_url').val('/bai-viet/' + str);
            return 'bai-viet/' + str;
        }
    </script>
}
