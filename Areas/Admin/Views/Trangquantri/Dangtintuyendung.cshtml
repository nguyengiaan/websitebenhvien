@{
    ViewData["Title"] = "Đăng tin tuyển dụng";
    
}
<div class="container-fluid">
    <div class="card">
        <div class="card-header py-3 d-flex justify-content-between align-items-center">
            <h5 class="mb-0 fw-bold">Quản lý tuyển dụng</h5>
            <button class="btn btn-primary rounded-pill px-4" onclick="openNewsModal()">
                <i class="fas fa-plus me-2"></i>Đăng tin tuyển dụng
            </button>
        </div>

        <div class="card-body">
            <div class="row mb-3">
                <div class="col-md-4">
                    <div class="input-group">
                        <input type="text" class="form-control" id="searchInput" placeholder="Tìm kiếm..." onchange="searchNews()">
                        <button class="btn btn-outline-secondary" onclick="searchNews()">
                            <i class="fas fa-search"></i>
                        </button>
                    </div>
                </div>
                
            </div>

            <div class="table-responsive">
                <table class="table table-hover align-middle mb-0">
                    <thead class="bg-light">
                        <tr>
                            <th class="ps-4" style="width: 5%">STT</th>
                            <th style="width: 20%">Vị trí ứng tuyển</th>
                            <th style="width: 15%">Trạng thái tuyển dụng</th>
                            <th style="width: 15%">Ngày đăng</th>
                            <th style="width: 10%">Trạng thái ẩn hiện</th>
                            <th style="width: 25%" class="text-center">Thao tác</th>
                        </tr>
                    </thead>
                    <tbody id="newsTableBody">
                    </tbody>
                </table>
            </div>
        </div>

        <div class="card-footer bg-white py-3">
            <nav>
                <ul class="pagination justify-content-center mb-0" id="pagination">
                </ul>
            </nav>
        </div>
    </div>
</div>

<!-- Modal -->
<div class="modal fade" id="newsModal" tabindex="-1">
    <div class="modal-dialog modal-fullscreen">
        <div class="modal-content">
            <div class="modal-header bg-primary text-white py-3">
                <h4 class="modal-title fw-bold" id="modalTitle">
                    <i class="fas fa-newspaper me-2"></i>
                    Đăng tin tuyển dụng
                </h4>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body bg-light">
                <div class="container-fluid py-3">
                    <form id="newsForm" class="bg-white rounded-3 shadow-sm p-4">
                        <input type="hidden" id="id_recruitmentpost" name="id_recruitmentpost">
                        
                        <div class="row g-4 mb-4">
                            <div class="col-md-12">
                                <div class="form-group">
                                    <label class="form-label fw-bold text-primary fs-5 mb-3">
                                        <i class="fas fa-heading me-2"></i>Vị trí tuyển dụng
                                    </label>
                                    <input type="text" class="form-control form-control-lg shadow-sm" 
                                           id="title_recruitmentpost" name="title_recruitmentpost" required 
                                     
                                           placeholder="Nhập vị trí tuyển dụng ">
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="form-label fw-bold text-primary fs-5 mb-3">
                                <i class="fas fa-edit me-2"></i>Trạng thái tuyển dụng 
                            </label>
                            <select class="form-select form-select-lg shadow-sm" id="Status" name="Status">
                                <option value="Đang tuyển">Đang tuyển</option>
                                <option value="Tạm dừng">Tạm dừng</option>
                            </select>
                        </div>
                        <div class="form-group">
                            <label class="form-label fw-bold text-primary fs-5 mb-3">
                                <i class="fas fa-edit me-2"></i>Mô tả tuyển dụng 
                            </label>
                            <textarea id="Content_recruitmentpost" name="Content_recruitmentpost" class="summernote"></textarea>
                        </div>
                  
                    </form>
                </div>
            </div>
            <div class="modal-footer border-top shadow-sm">
                <button type="button" class="btn btn-light btn-lg rounded-pill px-5" data-bs-dismiss="modal">
                    <i class="fas fa-times me-2"></i>Đóng
                </button>
                <button type="button" class="btn btn-primary btn-lg rounded-pill px-5" onclick="saveNews()">
                    <i class="fas fa-save me-2"></i>Lưu
                </button>
            </div>
        </div>
    </div>
</div>
@{
    var summenote = new websitebenhvien.Models.EnitityVM.Summenote(".summernote");
}
<partial name="_Summernote" model="summenote" />
@section Scripts {
    <script> 
        let currentPage = 1;
        const pageSize = 20;
        $(document).ready(function() {
            $('#newsModal').on('hidden.bs.modal', function () {
                $('#newsForm')[0].reset();
                $('#description').summernote('code', '');
                $('#id_News').val('');
                $('#modalTitle').text('Thêm tin tức');
            });
 
        });
        function openElfinder() {
            var fm = $('<div/>').dialogelfinder({
                url: '@Url.Action("Connector", "Filemanager")',
                lang: 'vi',
                width: 850,
                height: 450,
                destroyOnClose: true,
                getFileCallback: function(files, fm) {
                    // Create a new FileList object
                    const fileUrl = files.url;
                    fetch(fileUrl)
                        .then(response => response.blob())
                        .then(blob => {
                            // Create File object
                            const file = new File([blob], files.name, { type: blob.type });
                            
                            // Create DataTransfer
                            const dataTransfer = new DataTransfer();
                            dataTransfer.items.add(file);
                            
                            // Set files
                            document.getElementById('formFile').files = dataTransfer.files;

                            // Đóng dialog sau khi chọn file
                            fm.hide();
                            
                            // Hiển thị tên file đã chọn
                            $('#formFile').next('.custom-file-label').html(files.name);






                        });
                }
            }).dialogelfinder('instance');
        }
        function loadNews(page = 1) {
            $.ajax({
                url: '/Allinone/Listnews',
                type: 'GET',
                success: function(response) {
                    if (!response.status) return;

                    currentPage = page;
                    const categoryId = $('#categoryFilter').val();
                    const searchTerm = $('#searchInput').val().toLowerCase();

                    // Lọc dữ liệu một lần duy nhất
                    const filteredData = response.data.filter(item => {
                        const matchesCategory = !categoryId || item.id_Categorynews === categoryId;
                        const matchesSearch = !searchTerm || 
                            item.title.toLowerCase().includes(searchTerm) ||
                            item.description?.toLowerCase().includes(searchTerm) ||
                            item.alias_url.toLowerCase().includes(searchTerm);
                        return matchesCategory && matchesSearch;
                    });

                    // Tính toán phân trang
                    const startIndex = (page - 1) * pageSize;
                    const paginatedData = filteredData.slice(startIndex, startIndex + pageSize);
                    const totalPages = Math.ceil(filteredData.length / pageSize);

                    // Render dữ liệu
                    renderNews(paginatedData);
                    renderPagination(totalPages, page);
                }
            });
        }

        function renderNews(data) {
            console.log(data);  
            const tbody = $('#newsTableBody');
            tbody.empty();
            
            data.forEach((item, index) => {
                const startIndex = (currentPage - 1) * pageSize;
                tbody.append(`
                    <tr>
                        <td class="ps-4">${startIndex + index + 1}</td>
                        <td>${item.title}</td>
                        <td><img src="/Resources/${item.url}" alt="News Image" width="50"></td>
                        <td>${getCategoryName(item.id_Categorynews)}</td>
                        <td>${item.createat.split('T')[0]   }</td>
                        <td>${item.alias_url}</td>
                        <td>
                            <div class="form-check form-switch">
                                <input class="form-check-input" type="checkbox" role="switch" 
                                    id="status_${item.id_News}" 
                                    ${item.status ? 'checked' : ''}
                                    onchange="updateNewsStatus('${item.id_News}')">
                                <label class="form-check-label" for="status_${item.id_News}">
                                    ${item.status ? 'Hiện' : 'Ẩn'}
                                </label>
                            </div>
                        </td>
                        <td class="text-center">
                            <div class="d-flex justify-content-center">
                                <button class="btn btn-sm btn-primary me-2" onclick="editNews('${item.id_News}')" 
                                        data-bs-toggle="tooltip" title="Sửa">
                                    <i class="fas fa-edit"></i>
                                </button>
                                <button class="btn btn-sm btn-danger" onclick="deleteNews('${item.id_News}')"
                                        data-bs-toggle="tooltip" title="Xóa">
                                    <i class="fas fa-trash"></i>
                                </button>
                            </div>
                        </td>
                    </tr>
                `);
            });
        }

        function renderPagination(totalPages, currentPage) {
            const pagination = $('#pagination');
            pagination.empty();

            // Add Previous button
            pagination.append(`
                <li class="page-item ${currentPage === 1 ? 'disabled' : ''}">
                    <a class="page-link" href="#" onclick="loadNews(${currentPage - 1})" aria-label="Previous">
                        <span aria-hidden="true">&laquo;</span>
                    </a>
                </li>
            `);

            // Logic for showing limited page numbers with ellipsis
            let startPage = Math.max(1, currentPage - 2);
            let endPage = Math.min(totalPages, currentPage + 2);

            if (startPage > 1) {
                pagination.append(`
                    <li class="page-item">
                        <a class="page-link" href="#" onclick="loadNews(1)">1</a>
                    </li>
                `);
                if (startPage > 2) {
                    pagination.append('<li class="page-item disabled"><span class="page-link">...</span></li>');
                }
            }

            for (let i = startPage; i <= endPage; i++) {
                pagination.append(`
                    <li class="page-item ${i === currentPage ? 'active' : ''}">
                        <a class="page-link" href="#" onclick="loadNews(${i})">${i}</a>
                    </li>
                `);
            }

            if (endPage < totalPages) {
                if (endPage < totalPages - 1) {
                    pagination.append('<li class="page-item disabled"><span class="page-link">...</span></li>');
                }
                pagination.append(`
                    <li class="page-item">
                        <a class="page-link" href="#" onclick="loadNews(${totalPages})">${totalPages}</a>
                    </li>
                `);
            }

            // Add Next button
            pagination.append(`
                <li class="page-item ${currentPage === totalPages ? 'disabled' : ''}">
                    <a class="page-link" href="#" onclick="loadNews(${currentPage + 1})" aria-label="Next">
                        <span aria-hidden="true">&raquo;</span>
                    </a>
                </li>
            `);
        }



      

        function openNewsModal() {
            $('#modalTitle').text('Thêm tin tức');
            $('#newsForm')[0].reset();
            $('#id_News').val('');
            $('#newsModal').modal('show');
        }

        function searchNews() {
            loadNews(1);
        }

        function filterByCategory() {
            loadNews(1);
        }

        // Các hàm CRUD sẽ được thêm vào đây khi có API tương ứng
        function saveNews() {
            const form = $('#newsForm')[0];
            const formData = new FormData();
            var id = $('#id_recruitmentpost').val();
            var title_recruitmentpost = $('#title_recruitmentpost').val();
            var Content_recruitmentpost = $('#Content_recruitmentpost').summernote('code');
            var Status = $('#Status').val();
            
            formData.append('id_recruitmentpost', id);
            formData.append('title_recruitmentpost', title_recruitmentpost);
            formData.append('Content_recruitmentpost', Content_recruitmentpost);
            formData.append('Status', Status);

            if (!title_recruitmentpost || !Content_recruitmentpost) {
                Swal.fire({
                    title: 'Lỗi!',
                    text: 'Vui lòng điền đầy đủ thông tin bắt buộc',
                    icon: 'error',
                    confirmButtonText: 'OK'
                });
                return;
            }

            Swal.fire({
                title: 'Đang xử lý...',
                text: 'Vui lòng chờ',
                allowOutsideClick: false,
                showConfirmButton: false,
                didOpen: () => {
                    Swal.showLoading();
                }
            });
            
            console.log(formData);

            $.ajax({
                url: '/api-tuyen-dung-benh-vien',
                type: 'POST',
                data: formData,
                processData: false,
                contentType: false,
                success: function(response) {
                    Swal.close();
                    if (response.status) {
                        $('#newsModal').modal('hide');
                        loadNews(currentPage);
                        $('#Content_recruitmentpost').summernote('code', '');
                        $('#newsForm')[0].reset();
                        
                        Swal.fire({
                            title: id ? 'Cập nhật' : 'Thêm',
                            text: response.message,
                            icon: 'success',
                            confirmButtonText: 'OK'
                        });
                    } else {
                        Swal.fire({
                            title: 'Lỗi!',
                            text: response.message,
                            icon: 'error',
                            confirmButtonText: 'OK'
                        });
                    }
                },
                error: function(xhr, status, error) {
                    Swal.close();
                    Swal.fire({
                        title: 'Lỗi!',
                        text: 'Có lỗi xảy ra khi kết nối với server',
                        icon: 'error',
                        confirmButtonText: 'OK'
                    });
                }
            });
        }

function deleteNews(id) {

            Swal.fire({
                title: 'Xác nhận xóa?',
                text: "Bạn có chắc chắn muốn xóa tin tức này không?",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6', 
                cancelButtonColor: '#d33',
                confirmButtonText: 'Đồng ý',
                cancelButtonText: 'Hủy'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: '/Allinone/DeleteNews',
                        type: 'POST',
                        data: { id: id },
                       
                        success: function(response) {
                            if (response.status) {
                                Swal.fire({
                                    title: 'Thành công!',
                                    text: response.message,
                                    icon: 'success',
                                    confirmButtonText: 'OK'
                                }).then((result) => {
                                    if (result.isConfirmed) {
                                        loadNews(currentPage);
                                    }
                                });
                            } else {
                                Swal.fire({
                                    title: 'Lỗi!',
                                    text: response.message,
                                    icon: 'error',
                                    confirmButtonText: 'OK'
                                });
                            }
                        },
                        error: function(xhr, status, error) {
                            Swal.fire({
                                title: 'Lỗi!',
                                text: 'Có lỗi xảy ra khi kết nối với server',
                                icon: 'error',
                                confirmButtonText: 'OK'
                            });
                        }
                    });
                }
            });
        }
        function editNews(id) {
            $('#modalTitle').text('Sửa tin tức');
            $('#newsForm')[0].reset();
            
            // Show loading spinner
        
       
            $.ajax({
                url: '/Allinone/GetNewsById',
                type: 'POST',
                data: { id: id },
                beforeSend: function() {
                    Swal.fire({
                        title: 'Chờ một xíu....',
                        html: `
                            <div class="text-center">
                                <img src="https://i.pinimg.com/originals/fe/a5/33/fea5336ece9573d235870d51b8d28e7a.gif" width="100" height="100" alt="Loading..." />
                                <div class="progress mt-3" style="height: 20px;">
                                    <div class="progress-bar progress-bar-striped progress-bar-animated bg-primary" 
                                         role="progressbar" 
                                         style="width: 0%"
                                         aria-valuenow="0" 
                                         aria-valuemin="0" 
                                         aria-valuemax="100">
                                    </div>
                                </div>
                            </div>
                        `,
                        showConfirmButton: false,
                        allowOutsideClick: false,
                        background: '#ffffff',
                        didOpen: () => {
                            let progress = 0;
                            const bar = document.querySelector('.progress-bar');
                            const interval = setInterval(() => {
                                progress += 2;
                                bar.style.width = progress + '%';
                                bar.setAttribute('aria-valuenow', progress);
                                if (progress >= 100) {
                                    clearInterval(interval);
                                }
                            }, 50);
                        }
                    });
                },
                success: function(response) {
                    // Hide loading spinner
                 
           
                    
                    if (response.status) {
                           Swal.close();
                        const news = response.data;
                        
                        $('#id_News').val(news.id_News);
                        $('#title').val(news.title);
                        $('#id_Categorynews').val(news.id_Categorynews);
                        $('#alias_url').val(news.alias_url);
                        $('#description').summernote('code', news.description);
                        
                        $('#newsModal').modal('show');
                    } else {
                        Swal.fire({
                            title: 'Lỗi!',
                            text: response.message,
                            icon: 'error',
                            confirmButtonText: 'OK'
                        });
                    }
                },
                error: function(xhr, status, error) {
                    // Hide loading spinner
                    Swal.close();
                    loadingOverlay.remove();
                    
                    Swal.fire({
                        title: 'Lỗi!',
                        text: 'Có lỗi xảy ra khi kết nối với server',
                        icon: 'error',
                        confirmButtonText: 'OK'
                    });
                }
            });
        }
        // update status news
        function updateNewsStatus(id) {
            $.ajax({
                url: '/Allinone/UpdateStatusNews',
                type: 'POST',
                data: { id: id },
                success: function(response) {
                    if (response.status) {
                        loadNews(currentPage);
                    }
                }
            });
        }
            
    </script>
}