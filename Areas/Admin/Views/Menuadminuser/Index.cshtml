@using websitebenhvien.Models.EnitityVM;
@model List<MenuAdminVM>
@{
    ViewBag.Title = "Quản lý Menu Admin cho User";
    var userId = ViewBag.Id;
    var username = ViewBag.Username;
}

<div class="container-fluid px-4 py-3">
    <!-- Breadcrumb -->
    <div class="d-sm-flex align-items-center justify-content-between mb-4">
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb mb-0 bg-transparent p-0">
                <li class="breadcrumb-item">
                    <a href="@Url.Action("Index", "Home", new { area = "Admin" })" class="text-decoration-none">
                        <i class="fas fa-home mr-1"></i>Trang chủ
                    </a>
                </li>
                <li class="breadcrumb-item">
                    <a href="@Url.Action("Taikhoan", "Trangquantri")" class="text-decoration-none">
                        Quản lý tài khoản
                    </a>
                </li>
                <li class="breadcrumb-item active" aria-current="page">Phân quyền menu</li>
            </ol>
        </nav>
        <div class="btn-group">
            <button type="button" class="btn btn-primary shadow-sm" id="savePermissions">
                <i class="fas fa-save mr-2"></i>Lưu thay đổi
            </button>
            <a href="@Url.Action("Taikhoan", "Trangquantri")" class="btn btn-light shadow-sm">
                <i class="fas fa-arrow-left mr-2"></i>Quay lại
            </a>
        </div>
    </div>

    <!-- Page Header -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="card border-0 shadow-lg bg-gradient-primary text-white">
                <div class="card-body py-4">
                    <div class="row align-items-center">
                        <div class="col-auto">
                            <div class="avatar-circle">
                                <i class="fas fa-user-shield fa-2x"></i>
                            </div>
                        </div>
                        <div class="col">
                            <h2 class="h3 mb-1 font-weight-bold">Phân quyền Menu Admin</h2>
                            <p class="mb-0 opacity-75">
                                <i class="fas fa-user mr-2"></i>
                                Cấu hình quyền truy cập menu cho: <span class="font-weight-bold">@username</span>
                            </p>
                        </div>
                        <div class="col-auto">
                            <div class="text-center">
                                <div class="h4 mb-0" id="totalMenuCount">@Model.Count</div>
                                <small class="opacity-75">Menu có sẵn</small>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-12">
            <div class="card border-0 shadow-sm">
                <div class="card-header bg-white border-bottom-0 py-3">
                    <div class="row align-items-center">
                        <div class="col">
                            <h5 class="mb-0 font-weight-600">
                                <i class="fas fa-th-list mr-2 text-primary"></i>
                                Danh sách quyền menu
                            </h5>
                        </div>
                        <div class="col-auto">
                            <div class="badge badge-info badge-pill px-3 py-2">
                                <i class="fas fa-info-circle mr-1"></i>
                                ID User: @userId
                            </div>
                        </div>
                    </div>
                </div>

                <div class="card-body p-4">
                    <!-- Statistics Cards -->
                    <div class="row mb-4">
                        <div class="col-lg-3 col-md-6 mb-3">
                            <div class="stat-card stat-card-total">
                                <div class="stat-card-body">
                                    <div class="d-flex align-items-center">
                                        <div class="stat-icon">
                                            <i class="fas fa-list-ul"></i>
                                        </div>
                                        <div class="stat-content">
                                            <div class="stat-number">@Model.Count</div>
                                            <div class="stat-label">Tổng menu</div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-3 col-md-6 mb-3">
                            <div class="stat-card stat-card-success">
                                <div class="stat-card-body">
                                    <div class="d-flex align-items-center">
                                        <div class="stat-icon">
                                            <i class="fas fa-check-circle"></i>
                                        </div>
                                        <div class="stat-content">
                                            <div class="stat-number" id="assignedCount">0</div>
                                            <div class="stat-label">Đã cấp quyền</div>
                                        </div>
                                    </div>
                                    <div class="stat-progress">
                                        <div class="stat-progress-bar" id="assignedProgress"></div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-3 col-md-6 mb-3">
                            <div class="stat-card stat-card-warning">
                                <div class="stat-card-body">
                                    <div class="d-flex align-items-center">
                                        <div class="stat-icon">
                                            <i class="fas fa-clock"></i>
                                        </div>
                                        <div class="stat-content">
                                            <div class="stat-number" id="unassignedCount">@Model.Count</div>
                                            <div class="stat-label">Chưa cấp quyền</div>
                                        </div>
                                    </div>
                                    <div class="stat-progress">
                                        <div class="stat-progress-bar" id="unassignedProgress"></div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-3 col-md-6 mb-3">
                            <div class="stat-card stat-card-info">
                                <div class="stat-card-body">
                                    <div class="d-flex align-items-center">
                                        <div class="stat-icon">
                                            <i class="fas fa-percentage"></i>
                                        </div>
                                        <div class="stat-content">
                                            <div class="stat-number" id="percentageAssigned">0%</div>
                                            <div class="stat-label">Tỷ lệ cấp quyền</div>
                                        </div>
                                    </div>
                                    <div class="stat-progress">
                                        <div class="stat-progress-bar" id="percentageProgress"></div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Control Panel -->
                    <div class="control-panel mb-4">
                        <div class="row align-items-center">
                            <div class="col-md-8">
                                <div class="btn-toolbar" role="toolbar">
                                    <div class="btn-group mr-3" role="group">
                                        <button type="button" class="btn btn-outline-primary btn-action" id="selectAll">
                                            <i class="fas fa-check-double mr-2"></i>
                                            Chọn tất cả
                                        </button>
                                        <button type="button" class="btn btn-outline-secondary btn-action" id="deselectAll">
                                            <i class="far fa-square mr-2"></i>
                                            Bỏ chọn tất cả
                                        </button>
                                    </div>
                                    @if (!string.IsNullOrEmpty(userId?.ToString()))
                                    {
                                        <div class="btn-group" role="group">
                                            <button type="button" class="btn btn-outline-danger btn-action" id="deleteAllMenus">
                                                <i class="fas fa-trash-alt mr-2"></i>
                                                Xóa tất cả quyền
                                            </button>
                                        </div>
                                    }
                                </div>
                            </div>
                            <div class="col-md-4 text-right">
                                <div class="search-box">
                                    <div class="input-group">
                                        <input type="text" class="form-control" id="searchMenu" 
                                               placeholder="Tìm kiếm menu...">
                                        <div class="input-group-append">
                                            <span class="input-group-text">
                                                <i class="fas fa-search"></i>
                                            </span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Menu List Table -->
                    <div class="menu-container">
                        @if (Model.Count > 0)
                        {
                            <div class="table-responsive">
                                <table class="table table-hover menu-table">
                                    <thead class="table-header">
                                        <tr>
                                            <th width="80" class="text-center">
                                                <i class="fas fa-hashtag mr-1"></i>
                                                STT
                                            </th>
                                            <th>
                                                <i class="fas fa-th-list mr-2"></i>
                                                Tên Menu
                                            </th>
                                            <th width="150" class="text-center">
                                                <i class="fas fa-toggle-on mr-2"></i>
                                                Trạng thái
                                            </th>
                                            @if (!string.IsNullOrEmpty(userId?.ToString()))
                                            {
                                                <th width="100" class="text-center">
                                                    <i class="fas fa-cogs mr-2"></i>
                                                    Thao tác
                                                </th>
                                            }
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @for (int i = 0; i < Model.Count; i++)
                                        {
                                            <tr class="menu-row" data-menu-id="@Model[i].id" data-menu-name="@Model[i].Title">
                                                <td class="text-center align-middle">
                                                    <div class="menu-number-table">@(i + 1)</div>
                                                </td>
                                                <td class="align-middle">
                                                    <div class="d-flex align-items-center">
                                                        <div class="menu-icon-table mr-3">
                                                            <i class="fas fa-th-large"></i>
                                                        </div>
                                                        <div class="menu-info-table">
                                                            <h6 class="menu-title-table mb-1">@Model[i].Title</h6>
                                                            <small class="menu-id-table">Menu ID: @Model[i].id</small>
                                                        </div>
                                                    </div>
                                                </td>
                                                <td class="text-center align-middle">
                                                    <div class="switch-container">
                                                        <div class="custom-control custom-switch custom-switch-lg">
                                                            <input type="checkbox" 
                                                                   class="custom-control-input menu-checkbox" 
                                                                   id="menu_@Model[i].id" 
                                                                   data-menu-id="@Model[i].id" 
                                                                   data-menu-name="@Model[i].Title">
                                                            <label class="custom-control-label" for="menu_@Model[i].id">
                                                                <span class="switch-status">
                                                                    <span class="status-off">Tắt</span>
                                                                    <span class="status-on">Bật</span>
                                                                </span>
                                                            </label>
                                                        </div>
                                                    </div>
                                                </td>
                                                @if (!string.IsNullOrEmpty(userId?.ToString()))
                                                {
                                                    <td class="text-center align-middle">
                                                        <button type="button" class="btn btn-outline-danger btn-sm remove-single-menu" 
                                                                data-menu-id="@Model[i].id" data-menu-name="@Model[i].Title"
                                                                data-toggle="tooltip" title="Xóa quyền menu này">
                                                            <i class="fas fa-trash-alt"></i>
                                                        </button>
                                                    </td>
                                                }
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        }
                        else
                        {
                            <div class="empty-state">
                                <div class="empty-icon">
                                    <i class="fas fa-inbox fa-3x"></i>
                                </div>
                                <h5 class="empty-title">Không có menu nào</h5>
                                <p class="empty-description">
                                    Hiện tại chưa có menu admin nào trong hệ thống.<br>
                                    Vui lòng liên hệ quản trị viên để thêm menu.
                                </p>
                            </div>
                        }
                    </div>
                </div>

                <div class="card-footer bg-light border-top">
                    <div class="row align-items-center">
                        <div class="col-md-6">
                            <div class="footer-info">
                                <i class="fas fa-info-circle text-info mr-2"></i>
                                <span class="text-muted">
                                    Chọn các menu mà bạn muốn cấp quyền truy cập cho người dùng này
                                </span>
                            </div>
                        </div>
                        <div class="col-md-6 text-right">
                            <button type="button" class="btn btn-success btn-lg shadow-sm" id="savePermissions2">
                                <i class="fas fa-check mr-2"></i>
                                Áp dụng thay đổi
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section styles {
    <style>
        /* ===== GLOBAL STYLES ===== */
        .container-fluid {
            background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
            min-height: 100vh;
        }
        
        /* ===== BREADCRUMB ===== */
        .breadcrumb {
            background: transparent !important;
        }
        
        .breadcrumb-item a {
            color: #6c757d;
            transition: color 0.3s ease;
        }
        
        .breadcrumb-item a:hover {
            color: #007bff;
        }
        
        .breadcrumb-item.active {
            color: #495057;
            font-weight: 600;
        }
        
        /* ===== HEADER STYLES ===== */
        .bg-gradient-primary {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%) !important;
        }
        
        .avatar-circle {
            width: 60px;
            height: 60px;
            background: rgba(255, 255, 255, 0.2);
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            backdrop-filter: blur(10px);
        }
        
        /* ===== CARD STYLES ===== */
        .card {
            border-radius: 20px;
            border: none;
            transition: all 0.3s ease;
        }
        
        .shadow-lg {
            box-shadow: 0 1rem 3rem rgba(0, 0, 0, 0.175) !important;
        }
        
        .shadow-sm {
            box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075) !important;
        }
        
        /* ===== STATISTICS CARDS ===== */
        .stat-card {
            background: white;
            border-radius: 16px;
            padding: 0;
            transition: all 0.3s ease;
            overflow: hidden;
            height: 100%;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
        }
        
        .stat-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 30px rgba(0, 0, 0, 0.15);
        }
        
        .stat-card-body {
            padding: 24px;
        }
        
        .stat-icon {
            width: 56px;
            height: 56px;
            border-radius: 12px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 24px;
            margin-right: 16px;
        }
        
        .stat-card-total .stat-icon {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
        }
        
        .stat-card-success .stat-icon {
            background: linear-gradient(135deg, #4facfe 0%, #00f2fe 100%);
            color: white;
        }
        
        .stat-card-warning .stat-icon {
            background: linear-gradient(135deg, #fa709a 0%, #fee140 100%);
            color: white;
        }
        
        .stat-card-info .stat-icon {
            background: linear-gradient(135deg, #a8edea 0%, #fed6e3 100%);
            color: #495057;
        }
        
        .stat-number {
            font-size: 28px;
            font-weight: 700;
            color: #2d3748;
            margin-bottom: 4px;
        }
        
        .stat-label {
            font-size: 14px;
            color: #718096;
            font-weight: 500;
        }
        
        .stat-progress {
            height: 4px;
            background: #e2e8f0;
            border-radius: 2px;
            margin-top: 16px;
            overflow: hidden;
        }
        
        .stat-progress-bar {
            height: 100%;
            border-radius: 2px;
            transition: width 0.5s ease;
        }
        
        .stat-card-success .stat-progress-bar {
            background: linear-gradient(90deg, #4facfe 0%, #00f2fe 100%);
        }
        
        .stat-card-warning .stat-progress-bar {
            background: linear-gradient(90deg, #fa709a 0%, #fee140 100%);
        }
        
        .stat-card-info .stat-progress-bar {
            background: linear-gradient(90deg, #a8edea 0%, #fed6e3 100%);
        }
        
        /* ===== CONTROL PANEL ===== */
        .control-panel {
            background: white;
            border-radius: 16px;
            padding: 24px;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
        }
        
        .btn-action {
            border-radius: 12px;
            padding: 12px 20px;
            font-weight: 600;
            transition: all 0.3s ease;
            border-width: 2px;
        }
        
        .btn-action:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
        }
        
        .search-box .form-control {
            border-radius: 12px;
            border: 2px solid #e2e8f0;
            padding: 12px 16px;
            transition: all 0.3s ease;
        }
        
        .search-box .form-control:focus {
            border-color: #667eea;
            box-shadow: 0 0 0 0.2rem rgba(102, 126, 234, 0.25);
        }
        
        .search-box .input-group-text {
            border-radius: 0 12px 12px 0;
            border: 2px solid #e2e8f0;
            border-left: none;
            background: #f8f9fa;
        }
        
        /* ===== MENU TABLE ===== */
        .menu-container {
            background: white;
            border-radius: 16px;
            padding: 24px;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
        }
        
        .menu-table {
            margin-bottom: 0;
            border-collapse: separate;
            border-spacing: 0;
        }
        
        .table-header th {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            border: none;
            padding: 16px 20px;
            font-weight: 600;
            font-size: 14px;
            text-transform: uppercase;
            letter-spacing: 0.5px;
            position: sticky;
            top: 0;
            z-index: 10;
        }
        
        .table-header th:first-child {
            border-radius: 12px 0 0 0;
        }
        
        .table-header th:last-child {
            border-radius: 0 12px 0 0;
        }
        
        .menu-row {
            transition: all 0.3s ease;
            border-bottom: 1px solid #e9ecef;
        }
        
        .menu-row:hover {
            background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
            transform: translateY(-1px);
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
        }
        
        .menu-row:last-child {
            border-bottom: none;
        }
        
        .menu-row td {
            padding: 20px;
            vertical-align: middle;
            border-top: none;
        }
        
        .menu-number-table {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            width: 40px;
            height: 40px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            font-weight: 600;
            font-size: 14px;
            margin: 0 auto;
        }
        
        .menu-icon-table {
            width: 48px;
            height: 48px;
            background: linear-gradient(135deg, #4facfe 0%, #00f2fe 100%);
            border-radius: 12px;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-size: 18px;
        }
        
        .menu-title-table {
            font-weight: 600;
            color: #2d3748;
            margin-bottom: 4px;
            font-size: 16px;
        }
        
        .menu-id-table {
            color: #718096;
            font-size: 12px;
        }
        
        .switch-container {
            display: flex;
            justify-content: center;
            align-items: center;
        }
        
        .switch-status {
            margin-left: 60px;
            font-size: 12px;
            font-weight: 600;
        }
        
        .status-off {
            color: #718096;
        }
        
        .status-on {
            color: #00b894;
            display: none;
        }
        
        .custom-control-input:checked ~ .custom-control-label .status-off {
            display: none;
        }
        
        .custom-control-input:checked ~ .custom-control-label .status-on {
            display: inline;
        }
        
        /* ===== CUSTOM SWITCH ===== */
        .custom-switch-lg .custom-control-label::before {
            width: 3.5rem;
            height: 2rem;
            border-radius: 1rem;
            background: #e2e8f0;
            border: none;
        }
        
        .custom-switch-lg .custom-control-label::after {
            width: 1.6rem;
            height: 1.6rem;
            border-radius: 50%;
            top: 0.2rem;
            left: 0.2rem;
            background: white;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
        }
        
        .custom-switch-lg .custom-control-input:checked ~ .custom-control-label::before {
            background: linear-gradient(135deg, #4facfe 0%, #00f2fe 100%);
        }
        
        .custom-switch-lg .custom-control-input:checked ~ .custom-control-label::after {
            transform: translateX(1.5rem);
        }
        
        .switch-label {
            margin-left: 60px;
            font-size: 12px;
            font-weight: 600;
        }
        
        .switch-text-off {
            color: #718096;
        }
        
        .switch-text-on {
            color: #00b894;
            display: none;
        }
        
        .custom-control-input:checked ~ .custom-control-label .switch-text-off {
            display: none;
        }
        
        .custom-control-input:checked ~ .custom-control-label .switch-text-on {
            display: inline;
        }
        
        /* ===== TABLE ANIMATIONS ===== */
        .menu-row.menu-checked {
            background: linear-gradient(135deg, #00b89420, #ffffff) !important;
            border-left: 4px solid #00b894;
        }
        
        .menu-row.menu-unchecked {
            background: linear-gradient(135deg, #fa757020, #ffffff) !important;
            border-left: 4px solid #fa7570;
        }
        
        .table-responsive {
            border-radius: 12px;
            overflow: hidden;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
        }
        
        /* ===== EMPTY STATE ===== */
        .empty-state {
            text-align: center;
            padding: 60px 20px;
        }
        
        .empty-icon {
            color: #cbd5e0;
            margin-bottom: 24px;
        }
        
        .empty-title {
            color: #4a5568;
            font-weight: 600;
            margin-bottom: 12px;
        }
        
        .empty-description {
            color: #718096;
            margin: 0;
            line-height: 1.6;
        }
        
        /* ===== ANIMATIONS ===== */
        .menu-row.menu-checked {
            background: linear-gradient(135deg, #00b89420, #ffffff) !important;
            border-left: 4px solid #00b894;
        }
        
        .menu-row.menu-unchecked {
            background: linear-gradient(135deg, #fa757020, #ffffff) !important;
            border-left: 4px solid #fa7570;
        }
        
        .table-responsive {
            border-radius: 12px;
            overflow: hidden;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
        }
        
        @@keyframes pulse {
            0% { transform: scale(1); }
            50% { transform: scale(1.05); }
            100% { transform: scale(1); }
        }
        
        .menu-checkbox:checked {
            animation: pulse 0.3s ease;
        }
        
        @@keyframes rowHighlight {
            0% { background: transparent; }
            50% { background: rgba(102, 126, 234, 0.1); }
            100% { background: transparent; }
        }
        
        .search-match {
            animation: rowHighlight 0.8s ease;
        }
        
        /* ===== LOADING STATE ===== */
        .loading {
            opacity: 0.6;
            pointer-events: none;
            position: relative;
        }
        
        .loading::after {
            content: '';
            position: absolute;
            top: 50%;
            left: 50%;
            width: 40px;
            height: 40px;
            margin: -20px 0 0 -20px;
            border: 4px solid #f3f3f3;
            border-top: 4px solid #667eea;
            border-radius: 50%;
            animation: spin 1s linear infinite;
        }
        
        @@keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }
        
        /* ===== RESPONSIVE ===== */
        @@media (max-width: 768px) {
            .menu-table {
                font-size: 14px;
            }
            
            .menu-row td {
                padding: 12px 8px;
            }
            
            .menu-icon-table {
                width: 36px;
                height: 36px;
                font-size: 14px;
            }
            
            .menu-title-table {
                font-size: 14px;
            }
            
            .menu-number-table {
                width: 32px;
                height: 32px;
                font-size: 12px;
            }
            
            .btn-toolbar {
                flex-direction: column;
                gap: 12px;
            }
            
            .search-box {
                margin-top: 16px;
            }
            
            .stat-card-body {
                padding: 20px;
            }
            
            .stat-number {
                font-size: 24px;
            }
            
            .table-header th {
                padding: 12px 8px;
                font-size: 12px;
            }
        }
        
        @@media (max-width: 576px) {
            .menu-row td:nth-child(4) {
                display: none;
            }
            
            .table-header th:nth-child(4) {
                display: none;
            }
            
            .menu-info-table {
                max-width: 150px;
            }
            
            .menu-title-table {
                font-size: 13px;
                white-space: nowrap;
                overflow: hidden;
                text-overflow: ellipsis;
            }
        }
        
        /* ===== FOOTER ===== */
        .footer-info {
            display: flex;
            align-items: center;
        }
        
        .card-footer {
            border-radius: 0 0 20px 20px;
        }
    </style>
}

@section scripts {
    <script>
        $(document).ready(function() {
            var userId = '@userId';
            
            // Load menu với trạng thái của user
            if (userId) {
                loadUserMenus(userId);
            }
            
            // Cập nhật số liệu thống kê với animation
            function updateStats() {
                const totalMenus = $('.menu-checkbox').length;
                const assignedMenus = $('.menu-checkbox:checked').length;
                const unassignedMenus = totalMenus - assignedMenus;
                const percentage = totalMenus > 0 ? Math.round((assignedMenus / totalMenus) * 100) : 0;
                
                // Animate numbers
                animateNumber('#assignedCount', assignedMenus);
                animateNumber('#unassignedCount', unassignedMenus);
                animateNumber('#percentageAssigned', percentage, '%');
                
                // Update progress bars
                updateProgressBar('#assignedProgress', (assignedMenus / totalMenus) * 100);
                updateProgressBar('#unassignedProgress', (unassignedMenus / totalMenus) * 100);
                updateProgressBar('#percentageProgress', percentage);
            }
            
            // Animate number changes
            function animateNumber(selector, endValue, suffix = '') {
                const element = $(selector);
                const startValue = parseInt(element.text()) || 0;
                const duration = 500;
                const stepTime = 20;
                const steps = duration / stepTime;
                const increment = (endValue - startValue) / steps;
                let currentValue = startValue;
                
                const timer = setInterval(() => {
                    currentValue += increment;
                    if ((increment > 0 && currentValue >= endValue) || 
                        (increment < 0 && currentValue <= endValue)) {
                        currentValue = endValue;
                        clearInterval(timer);
                    }
                    element.text(Math.round(currentValue) + suffix);
                }, stepTime);
            }
            
            // Update progress bars
            function updateProgressBar(selector, percentage) {
                $(selector).css('width', percentage + '%');
            }
            
            // Load menu của user với trạng thái
            function loadUserMenus(userId) {
                $.ajax({
                    url: '/api/get-user-menus',
                    type: 'GET',
                    data: { userId: userId },
                    success: function(response) {
                        if (response.status && response.data) {
                            response.data.forEach(function(menu) {
                                var checkbox = $(`#menu_${menu.id}`);
                                if (checkbox.length && menu.isSelected) {
                                    checkbox.prop('checked', true);
                                    checkbox.closest('.menu-row').addClass('menu-checked');
                                }
                            });
                            updateStats();
                        }
                    },
                    error: function() {
                        console.log('Không thể load trạng thái menu của user');
                    }
                });
            }
            
            // Search functionality for table
            $('#searchMenu').on('input', function() {
                const searchTerm = $(this).val().toLowerCase();
                $('.menu-row').each(function() {
                    const menuName = $(this).data('menu-name').toLowerCase();
                    const menuId = $(this).data('menu-id').toString();
                    
                    if (menuName.includes(searchTerm) || menuId.includes(searchTerm)) {
                        $(this).show().addClass('search-match');
                        setTimeout(() => $(this).removeClass('search-match'), 800);
                    } else {
                        $(this).hide().removeClass('search-match');
                    }
                });
                
                // Show/hide empty message
                const visibleRows = $('.menu-row:visible').length;
                if (visibleRows === 0 && searchTerm.length > 0) {
                    if (!$('.no-results').length) {
                        $('.menu-table tbody').append(`
                            <tr class="no-results">
                                <td colspan="4" class="text-center py-4">
                                    <i class="fas fa-search-minus fa-2x text-muted mb-2"></i>
                                    <br>
                                    <span class="text-muted">Không tìm thấy menu nào phù hợp với "${searchTerm}"</span>
                                </td>
                            </tr>
                        `);
                    }
                } else {
                    $('.no-results').remove();
                }
            });
            
            // Khởi tạo
            updateStats();
            
            // Chọn tất cả với animation
            $('#selectAll').click(function() {
                $('.menu-checkbox').each(function(index) {
                    const $this = $(this);
                    setTimeout(() => {
                        $this.prop('checked', true).trigger('change');
                    }, index * 50);
                });
                
                $(this).addClass('btn-primary').removeClass('btn-outline-primary');
                $('#deselectAll').addClass('btn-outline-secondary').removeClass('btn-secondary');
            });
            
            // Bỏ chọn tất cả với animation
            $('#deselectAll').click(function() {
                $('.menu-checkbox').each(function(index) {
                    const $this = $(this);
                    setTimeout(() => {
                        $this.prop('checked', false).trigger('change');
                    }, index * 50);
                });
                
                $(this).addClass('btn-secondary').removeClass('btn-outline-secondary');
                $('#selectAll').addClass('btn-outline-primary').removeClass('btn-primary');
            });
            
            // Xóa tất cả menu của user
            $('#deleteAllMenus').click(function() {
                if (!userId) {
                    showAlert('error', 'Lỗi!', 'Không có thông tin user');
                    return;
                }
                
                Swal.fire({
                    title: 'Xác nhận xóa tất cả?',
                    text: "Bạn có chắc muốn xóa tất cả quyền menu của user này?",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#dc3545',
                    cancelButtonColor: '#6c757d',
                    confirmButtonText: '<i class="fas fa-trash mr-1"></i>Xóa tất cả',
                    cancelButtonText: '<i class="fas fa-times mr-1"></i>Hủy',
                    customClass: {
                        popup: 'swal-custom'
                    }
                }).then((result) => {
                    if (result.isConfirmed) {
                        $.ajax({
                            url: '/api/delete-all-user-menus',
                            type: 'POST',
                            data: { userId: userId },
                            success: function(response) {
                                if (response.status) {
                                    $('.menu-checkbox').each(function(index) {
                                        const $this = $(this);
                                        setTimeout(() => {
                                            $this.prop('checked', false).trigger('change');
                                        }, index * 30);
                                    });
                                    showAlert('success', 'Thành công!', response.message);
                                } else {
                                    showAlert('error', 'Lỗi!', response.message);
                                }
                            },
                            error: function() {
                                showAlert('error', 'Lỗi!', 'Không thể kết nối đến server');
                            }
                        });
                    }
                });
            });
            
            // Xóa từng menu với animation
            $(document).on('click', '.remove-single-menu', function() {
                var menuId = $(this).data('menu-id');
                var menuName = $(this).data('menu-name');
                
                if (!userId) {
                    showAlert('error', 'Lỗi!', 'Không có thông tin user');
                    return;
                }
                
                Swal.fire({
                    title: 'Xác nhận xóa?',
                    html: `Bạn có chắc muốn xóa quyền menu<br><strong>"${menuName}"</strong> khỏi user này?`,
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#dc3545',
                    cancelButtonColor: '#6c757d',
                    confirmButtonText: '<i class="fas fa-trash mr-1"></i>Xóa',
                    cancelButtonText: '<i class="fas fa-times mr-1"></i>Hủy',
                    customClass: {
                        popup: 'swal-custom'
                    }
                }).then((result) => {
                    if (result.isConfirmed) {
                        $.ajax({
                            url: '/api/remove-user-menu',
                            type: 'POST',
                            data: { userId: userId, menuId: menuId },
                            success: function(response) {
                                if (response.status) {
                                    $(`#menu_${menuId}`).prop('checked', false).trigger('change');
                                    showAlert('success', 'Thành công!', response.message);
                                } else {
                                    showAlert('error', 'Lỗi!', response.message);
                                }
                            },
                            error: function() {
                                showAlert('error', 'Lỗi!', 'Không thể kết nối đến server');
                            }
                        });
                    }
                });
            });
            
            // Theo dõi thay đổi checkbox với animation cho table
            $('.menu-checkbox').change(function() {
                const menuRow = $(this).closest('.menu-row');
                const isChecked = $(this).is(':checked');
                
                // Visual feedback for table row
                menuRow.removeClass('menu-checked menu-unchecked');
                setTimeout(() => {
                    menuRow.addClass(isChecked ? 'menu-checked' : 'menu-unchecked');
                }, 10);
                
                setTimeout(() => {
                    menuRow.removeClass('menu-checked menu-unchecked');
                }, 1500);
                
                updateStats();
                updateButtonStates();
            });
            
            // Update button states
            function updateButtonStates() {
                const totalChecked = $('.menu-checkbox:checked').length;
                const totalMenus = $('.menu-checkbox').length;
                
                if (totalChecked === totalMenus && totalMenus > 0) {
                    $('#selectAll').addClass('btn-primary').removeClass('btn-outline-primary');
                    $('#deselectAll').addClass('btn-outline-secondary').removeClass('btn-secondary');
                } else if (totalChecked === 0) {
                    $('#deselectAll').addClass('btn-secondary').removeClass('btn-outline-secondary');
                    $('#selectAll').addClass('btn-outline-primary').removeClass('btn-primary');
                } else {
                    $('#selectAll').addClass('btn-outline-primary').removeClass('btn-primary');
                    $('#deselectAll').addClass('btn-outline-secondary').removeClass('btn-secondary');
                }
            }
            
            // Custom alert function
            function showAlert(type, title, text) {
                const icons = {
                    success: 'fas fa-check-circle',
                    error: 'fas fa-exclamation-circle',
                    warning: 'fas fa-exclamation-triangle',
                    info: 'fas fa-info-circle'
                };
                
                Swal.fire({
                    icon: type,
                    title: title,
                    text: text,
                    timer: type === 'success' ? 2000 : null,
                    showConfirmButton: type !== 'success',
                    customClass: {
                        popup: 'swal-custom'
                    }
                });
            }
            
            // Lưu thay đổi với loading state
            $('#savePermissions, #savePermissions2').click(function() {
                if (!userId) {
                    showAlert('error', 'Lỗi!', 'Không có thông tin user để lưu');
                    return;
                }
                
                const selectedMenus = [];
                $('.menu-checkbox:checked').each(function() {
                    const menuId = $(this).data('menu-id');
                    if (menuId) {
                        selectedMenus.push(parseInt(menuId));
                    }
                });
                
                // Show loading state
                const $button = $(this);
                const originalText = $button.html();
                $button.prop('disabled', true)
                       .html('<i class="fas fa-spinner fa-spin mr-2"></i>Đang lưu...');
                $('.menu-container').addClass('loading');
                
                // Send data to server
                $.ajax({
                    url: '/api/save-user-menu-admin',
                    type: 'POST',
                    data: {
                        userId: userId,
                        menuIds: selectedMenus
                    },
                    success: function(response) {
                        if (response.status) {
                            showAlert('success', 'Thành công!', `Đã cập nhật quyền cho ${selectedMenus.length} menu`);
                        } else {
                            showAlert('error', 'Lỗi!', response.message || 'Có lỗi xảy ra khi lưu dữ liệu');
                        }
                    },
                    error: function() {
                        showAlert('error', 'Lỗi!', 'Không thể kết nối đến server');
                    },
                    complete: function() {
                        // Reset loading state
                        $button.prop('disabled', false).html(originalText);
                        $('.menu-container').removeClass('loading');
                    }
                });
            });
            
            // Initialize tooltips
            $('[data-toggle="tooltip"]').tooltip({
                placement: 'top',
                trigger: 'hover'
            });
            
            // Keyboard shortcuts
            $(document).keydown(function(e) {
                if (e.ctrlKey) {
                    switch(e.which) {
                        case 65: // Ctrl+A
                            e.preventDefault();
                            $('#selectAll').click();
                            break;
                        case 68: // Ctrl+D
                            e.preventDefault();
                            $('#deselectAll').click();
                            break;
                        case 83: // Ctrl+S
                            e.preventDefault();
                            $('#savePermissions').click();
                            break;
                    }
                }
            });
            
            // Show keyboard shortcuts info
            setTimeout(() => {
                if ($('.menu-checkbox').length > 5) {
                    const toast = $(`
                        <div class="toast-shortcuts">
                            <div class="toast-content">
                                <i class="fas fa-keyboard mr-2"></i>
                                <span>Phím tắt: Ctrl+A (chọn tất cả), Ctrl+D (bỏ chọn), Ctrl+S (lưu)</span>
                                <button type="button" class="btn-close" onclick="$(this).closest('.toast-shortcuts').fadeOut()">
                                    <i class="fas fa-times"></i>
                                </button>
                            </div>
                        </div>
                    `);
                    
                    $('body').append(toast);
                    setTimeout(() => toast.fadeOut(), 5000);
                }
            }, 1000);
        });
    </script>
    
    <style>
        .swal-custom {
            border-radius: 16px;
            font-family: inherit;
        }
        
        .toast-shortcuts {
            position: fixed;
            top: 20px;
            right: 20px;
            z-index: 9999;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            border-radius: 12px;
            padding: 16px 20px;
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.2);
            max-width: 400px;
        }
        
        .toast-content {
            display: flex;
            align-items: center;
            font-size: 14px;
        }
        
        .btn-close {
            background: none;
            border: none;
            color: white;
            margin-left: auto;
            padding: 0 0 0 12px;
            cursor: pointer;
        }
        
        .search-match {
            animation: highlight 0.5s ease;
        }
        
        @@keyframes highlight {
            0% { background: transparent; }
            50% { background: rgba(102, 126, 234, 0.1); }
            100% { background: transparent; }
        }
    </style>
}